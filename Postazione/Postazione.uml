<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_vbXlENxYEeyZO8IXFiGgsA" name="Postazione">
    <eAnnotations xmi:id="_yZrJQNxYEeyZO8IXFiGgsA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_yZrJQdxYEeyZO8IXFiGgsA" source="codegen">
        <details xmi:id="_yZrwUNxYEeyZO8IXFiGgsA" key="codegenDirectory" value="/Postazione/src/main/java"/>
        <details xmi:id="_z-LB4NxYEeyZO8IXFiGgsA" key="AssociatedSourceCode" value="/Postazione/src/main/java/postazione/app/App.java;2736848537/1;/Postazione/src/main/java/postazione/view/viewmodel/OptionCallBack.java;3403932965/1;/Postazione/src/main/java/postazione/controller/Factory.java;8545102/1;/Postazione/src/main/java/postazione/controller/Service.java;13124125/1;/Postazione/src/main/java/postazione/view/viewmodel/CandidateCallBack.java;921961925/1;/Postazione/src/main/java/postazione/view/Activation.java;583517840/1;/Postazione/src/main/java/postazione/view/viewmodel/BallotRecapViewModel.java;132329621/1;/Postazione/src/main/java/postazione/view/ShowMessage.java;1153930671/1;/Postazione/src/main/java/postazione/view/View.java;185370717/1;/Postazione/src/main/java/postazione/view/MainScene.java;1877535457/1;/Postazione/src/main/java/postazione/model/Post.java;2967077232/1;/Postazione/src/main/java/postazione/view/viewmodel/CandidateViewModel.java;3455613094/1;/Postazione/src/main/java/postazione/controller/Controller.java;3008285238/1;/Postazione/src/main/java/postazione/view/viewmodel/OptionViewModel.java;2266674095/1;/Postazione/src/main/java/postazione/view/viewmodel/VoteRecapViewModel.java;1037461732/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_zI0uQNxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_zI0uQdxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_zI1VUNxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_zI1VUdxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_zI1VUtxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_zI1VU9xYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_zI1VVNxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_zI18YNxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_zI2jcNxYEeyZO8IXFiGgsA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_zITJ0NxYEeyZO8IXFiGgsA" name="postazione">
      <packagedElement xmi:type="uml:Package" xmi:id="_zIc60NxYEeyZO8IXFiGgsA" name="controller">
        <packagedElement xmi:type="uml:Class" xmi:id="_zMDBYNxYEeyZO8IXFiGgsA" name="Factory">
          <interfaceRealization xmi:id="_zeh4gNxYEeyZO8IXFiGgsA" client="_zMDBYNxYEeyZO8IXFiGgsA" supplier="_zcml4NxYEeyZO8IXFiGgsA" contract="_zcml4NxYEeyZO8IXFiGgsA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg7sQNxYEeyZO8IXFiGgsA" name="createService" specification="_zejtsNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg7sQdxYEeyZO8IXFiGgsA" name="controller" type="_zcnM8dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zg7sQtxYEeyZO8IXFiGgsA" name="link" type="_zclXwNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zg7sQ9xYEeyZO8IXFiGgsA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zg7sRNxYEeyZO8IXFiGgsA" type="_zeifkNxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>return new Service(controller, link, name);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zejtsNxYEeyZO8IXFiGgsA" name="createService" method="_zg7sQNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zejtsdxYEeyZO8IXFiGgsA" name="controller" type="_zcnM8dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zejtstxYEeyZO8IXFiGgsA" name="link" type="_zclXwNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zejts9xYEeyZO8IXFiGgsA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zekUwNxYEeyZO8IXFiGgsA" type="_zeifkNxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zMH54NxYEeyZO8IXFiGgsA" name="Service">
          <generalization xmi:id="_zemJ8txYEeyZO8IXFiGgsA" general="_zcqQQNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfZbMdxYEeyZO8IXFiGgsA" name="post" visibility="private" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_ziEUsdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfaCQdxYEeyZO8IXFiGgsA" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_zcBXEdxYEeyZO8IXFiGgsA" isReadOnly="true" association="_ziFi0NxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zfapUNxYEeyZO8IXFiGgsA" value="LogManager.getLogger(Service.class)"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg8TUNxYEeyZO8IXFiGgsA" name="Service" specification="_zeli4NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg8TUdxYEeyZO8IXFiGgsA" name="controller" type="_zcnM8dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zg8TUtxYEeyZO8IXFiGgsA" name="link" type="_zclXwNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zg8TU9xYEeyZO8IXFiGgsA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zg8TVNxYEeyZO8IXFiGgsA" type="_zMH54NxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>super(controller, link, name);&#xD;
		post = ((Controller) controller).getPost();&#xD;
		logger.debug(&quot;Creado servicio {} &quot;, name);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg8TVdxYEeyZO8IXFiGgsA" name="execute" specification="_zMKWINxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>logger.debug(&quot;Ejecutando servicio {}&quot;, getName());&#xD;
		//Il primo messaggio indica cosa è richiesto alla postazione&#xD;
		String message = link.read();&#xD;
		&#xD;
		// Codice aggiunto per testare il thread di seggio che fa polling sulle postazioni&#xD;
		if(Constants.devMode &amp;&amp; post.getSimulateOffline()) {&#xD;
			logger.debug(&quot;devMode &amp;&amp; simulateoffline&quot;);&#xD;
			return;&#xD;
		}&#xD;
		// -------------------------------------------------------------------------------&#xD;
&#xD;
		switch(message) {&#xD;
			//Se il messaggio è una richiesta di associazione viene richiamata associationRequest&#xD;
			case Protocol.associationReq:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					associationRequest();&#xD;
				break;&#xD;
				&#xD;
			//Se il messaggio indica la fine del voto viene richiamata endVote&#xD;
			case Protocol.postEndVoteReq:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					endVote();&#xD;
				break;&#xD;
				&#xD;
			//Se il messaggio è una richiesta dello stato della postazione viene richiamata sendState&#xD;
			case Protocol.retrieveStatePost:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					sendState();&#xD;
				break;&#xD;
				&#xD;
			//Se il messaggio richiede il reset della postazione viene richiamata resetPost&#xD;
			case Protocol.resetPostReq:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					resetPost(true);&#xD;
				break;&#xD;
				&#xD;
			case Protocol.stationShutDown:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					resetPost(false);&#xD;
				break;&#xD;
				&#xD;
			case Protocol.urnShutDown:&#xD;
				if (((Controller) controller).verifyUrnIp(ip))&#xD;
					deactivatePost();&#xD;
				break;&#xD;
&#xD;
			case Protocol.changePostState:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					changeState();&#xD;
				break;&#xD;
				&#xD;
			case Protocol.checkUnreachablePost:&#xD;
				if (((Controller) controller).verifyStationIp(ip))&#xD;
					notifyReachable();&#xD;
				break;&#xD;
&#xD;
			//Se il messaggio non è stato riconosciuto si stampa a schermo un errore&#xD;
			default: &#xD;
				String error = &quot;Il terminale [IP: &quot;+ip.getHostAddress()+&quot;] ha inviato il seguente messaggio inatteso: &quot;+message;&#xD;
				if(Constants.verbose)&#xD;
					controller.printError(&quot;Comunicazione Inattesa&quot;, error);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg86YNxYEeyZO8IXFiGgsA" name="associationRequest" specification="_zMMyYdxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>if(!link.hasNextLine()) {&#xD;
			controller.printError(&quot;Errore di Comunicazione&quot;, &quot;Il seggio non ha terminato l'invio dei dati richiesti.&quot;);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		Message response = new Message();&#xD;
		int[] ballotCodes;&#xD;
		String badge;&#xD;
		try {&#xD;
			//Verifichiamo che il seggio abbia inviato tutti i dati necessari&#xD;
			Message request = (Message) Message.fromB64(link.read(), &quot;seggio&quot;);&#xD;
			String[] required = {&quot;ballotCodes&quot;, &quot;badge&quot;};&#xD;
			Class&lt;?>[] types = {int[].class, String.class};&#xD;
			&#xD;
			request.verifyMessage(Protocol.associationReq, required, types, &quot;seggio&quot;);&#xD;
			ballotCodes = request.getElement(&quot;ballotCodes&quot;);&#xD;
			badge = request.getElement(&quot;badge&quot;);&#xD;
			&#xD;
			response = ((Controller) controller).setAssociation(ballotCodes, badge);&#xD;
			&#xD;
		} catch(PEException e) {&#xD;
			//Se la richiesta non è completa informiamo il seggio&#xD;
			controller.printError(e);&#xD;
			&#xD;
			response.setValue(Protocol.associationNack);&#xD;
			response.addError(e.getMessage());&#xD;
		}&#xD;
	&#xD;
		//Si invia il messaggio al seggio&#xD;
		link.write(response.toB64());&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg86YdxYEeyZO8IXFiGgsA" name="endVote" specification="_zMNZcNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>try {&#xD;
			((Controller) controller).badgeOut();&#xD;
			link.write(Protocol.postEndVoteAck);&#xD;
		}&#xD;
		catch (PEException e) {&#xD;
			controller.printError(e);&#xD;
			link.write(Protocol.postEndVoteNack);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg86YtxYEeyZO8IXFiGgsA" name="sendState" specification="_zMOAgNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>try {&#xD;
			((Controller) controller).notifyStateToStation(ip);&#xD;
		} catch (PEException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg9hcNxYEeyZO8IXFiGgsA" name="resetPost" specification="_zMOnkNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg9hcdxYEeyZO8IXFiGgsA" name="produceResponse">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			((Controller) controller).resetPost();&#xD;
			&#xD;
			if (produceResponse)&#xD;
				link.write(Protocol.resetPostGranted);&#xD;
			&#xD;
		} catch (PEException e) {&#xD;
			controller.printError(e);&#xD;
			&#xD;
			if (produceResponse)&#xD;
				link.write(Protocol.resetPostDenied);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg9hctxYEeyZO8IXFiGgsA" name="deactivatePost" specification="_zMPOoNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>try {&#xD;
			((Controller) controller).deactivatePost();&#xD;
&#xD;
		} catch(PEException e) {&#xD;
			controller.printError(e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg9hc9xYEeyZO8IXFiGgsA" name="changeState" specification="_zMP1sNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>if(!link.hasNextLine()) {&#xD;
			controller.printError(&quot;Errore di Comunicazione&quot;, &quot;Il seggio non ha terminato l'invio dei dati necessari al cambio stato.&quot;);&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		StatePost newState;&#xD;
		try {&#xD;
			//Verifichiamo che il seggio abbia inviato tutti i dati necessari&#xD;
			Message request = (Message) Message.fromB64(link.read(), &quot;seggio&quot;);&#xD;
			String[] required = {&quot;newState&quot;};&#xD;
			Class&lt;?>[] types = {StatePost.class};&#xD;
			&#xD;
			request.verifyMessage(Protocol.changePostState, required, types, &quot;seggio&quot;);&#xD;
			newState = request.getElement(&quot;newState&quot;);&#xD;
			&#xD;
			((Controller) controller).setNewState(ip, newState);&#xD;
		} catch(PEException e) {&#xD;
			//Se la richiesta non è completa informiamo il seggio&#xD;
			controller.printError(e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg-IgNxYEeyZO8IXFiGgsA" name="notifyReachable" specification="_zMQcwNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>Message response = new Message(Protocol.checkUnreachablePost);&#xD;
		response.setElement(&quot;state&quot;, ((Controller) controller).getPost().getState());&#xD;
		response.setElement(&quot;card&quot;, ((Controller) controller).getPost().getBadge());&#xD;
		link.write(response.toB64());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zMKWINxYEeyZO8IXFiGgsA" name="execute" visibility="protected" method="_zg8TVdxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zMMyYdxYEeyZO8IXFiGgsA" name="associationRequest" visibility="private" method="_zg86YNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhiwQdxYEeyZO8IXFiGgsA">
              <body>Funzione che gestisce la richiesta di associazione da parte del seggio.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zMNZcNxYEeyZO8IXFiGgsA" name="endVote" visibility="private" method="_zg86YdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhiwQtxYEeyZO8IXFiGgsA">
              <body>Funzione che libera la postazione ricevuto il messaggio di termine del voto dal seggio.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zMOAgNxYEeyZO8IXFiGgsA" name="sendState" visibility="private" method="_zg86YtxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhjXUNxYEeyZO8IXFiGgsA">
              <body>Risponde inviando il proprio stato al seggio.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zMOnkNxYEeyZO8IXFiGgsA" name="resetPost" visibility="private" method="_zg9hcNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhjXUdxYEeyZO8IXFiGgsA">
              <body>Funzione che resetta lo stato della postazione se il seggio lo richiede.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zMOnkdxYEeyZO8IXFiGgsA" name="produceResponse">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zMPOoNxYEeyZO8IXFiGgsA" name="deactivatePost" visibility="private" method="_zg9hctxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zMP1sNxYEeyZO8IXFiGgsA" name="changeState" visibility="private" method="_zg9hc9xYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zMQcwNxYEeyZO8IXFiGgsA" name="notifyReachable" visibility="private" method="_zg-IgNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zeli4NxYEeyZO8IXFiGgsA" name="Service" method="_zg8TUNxYEeyZO8IXFiGgsA">
            <eAnnotations xmi:id="_zeli5NxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_zemJ8NxYEeyZO8IXFiGgsA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_zeli4dxYEeyZO8IXFiGgsA" name="controller" type="_zcnM8dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zeli4txYEeyZO8IXFiGgsA" name="link" type="_zclXwNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zeli49xYEeyZO8IXFiGgsA" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zemJ8dxYEeyZO8IXFiGgsA" type="_zMH54NxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zN9F4NxYEeyZO8IXFiGgsA" name="Controller">
          <generalization xmi:id="_zfQ4UtxYEeyZO8IXFiGgsA" general="_zcnM8dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zgg1gNxYEeyZO8IXFiGgsA" name="post" visibility="private" isLeaf="true" type="_zNa6YNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zijc4dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zghckdxYEeyZO8IXFiGgsA" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_zcBXEdxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zikrAdxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zghcktxYEeyZO8IXFiGgsA" value="LogManager.getLogger(Controller.class)"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhV78NxYEeyZO8IXFiGgsA" name="Controller" specification="_zfJjkNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhV78dxYEeyZO8IXFiGgsA" name="server" type="_zd930dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhV78txYEeyZO8IXFiGgsA" name="view" type="_zeCwUNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhV789xYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhV79NxYEeyZO8IXFiGgsA" type="_zN9F4NxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>super(server, view, Terminals.Type.Post, false);&#xD;
		this.post = post;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhV79dxYEeyZO8IXFiGgsA" name="Controller" specification="_zfKxsNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhV79txYEeyZO8IXFiGgsA" name="view" type="_zeCwUNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhV799xYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhV7-NxYEeyZO8IXFiGgsA" type="_zN9F4NxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>super(new Server(new Factory(), Constants.portPost, post.getNumConnections(), Terminals.Type.Post), view,&#xD;
				Terminals.Type.Post, Constants.postRfid);&#xD;
		this.server.setController(this);&#xD;
		this.post = post;&#xD;
&#xD;
		if (!Constants.devMode)&#xD;
			this.post.setUrnIp(CfgManager.getValue(&quot;ips.cfg&quot;, &quot;urn&quot;));&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhWjANxYEeyZO8IXFiGgsA" name="activate" specification="_zOBXUNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhWjAdxYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>logger.debug(&quot;activate {} &quot;, sessionKey);&#xD;
		// Se la postazione è già stata attivata allora questa funzione non deve essere&#xD;
		// eseguita&#xD;
		if (!correctState(StatePost.NON_ATTIVA)) {&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Si verifica che la chiave di sessione abbia formato corretto (32 caratteri&#xD;
		// alfanumerici solo maiuscoli)&#xD;
		if (!FileUtils.isSessionKey(sessionKey)) {&#xD;
			printError(&quot;Chiave di Sessione Errata!&quot;, &quot;La chiave di sessione inserita non è una chiave valida.&quot;);&#xD;
			return;&#xD;
		}&#xD;
		logger.debug(&quot;pregunto por autenticar en la urna  &quot;);&#xD;
		try {&#xD;
			// Si effettua la prima fase della mutua autenticazione&#xD;
			String encryptedNonce2 = askForUrnAuthentication(sessionKey);&#xD;
			logger.debug(&quot; la urna responde {} &quot;, encryptedNonce2);&#xD;
			// Se la prima fase ha restituito un nonce cifrato ...&#xD;
			if (encryptedNonce2 != null) {&#xD;
				logger.debug(&quot;voy a autenticar el post en la urna  &quot;);&#xD;
				// ... si procede a risolverlo e ad inviare la soluzione all'urna, che&#xD;
				// restituisce un messaggio&#xD;
				Message urnResponse = authenticateToUrn(encryptedNonce2, sessionKey);&#xD;
				logger.debug(&quot; la urna responde {} &quot;, urnResponse);&#xD;
				// Si verifica che il messaggio sia valido e contenga i campi necessari&#xD;
				// (autenticazione con l'urna avvenuta)&#xD;
				String[] required = { &quot;ipStation&quot;, &quot;pubKey&quot;, &quot;ballots&quot; };&#xD;
				Class&lt;?>[] types = { InetAddress.class, byte[].class, EmptyBallot[].class };&#xD;
				urnResponse.verifyMessage(Protocol.validAuthentication, required, types, &quot;urna&quot;);&#xD;
				logger.debug(&quot; mensaje verificado &quot;);&#xD;
				// Vengono recuperati tutti i dati necessari inviati dall'urna&#xD;
				InetAddress stationIp = urnResponse.getElement(&quot;ipStation&quot;);&#xD;
				byte[] accountantPublicKey = urnResponse.getElement(&quot;pubKey&quot;);&#xD;
				EmptyBallot[] ballots = urnResponse.getElement(&quot;ballots&quot;);&#xD;
				logger.debug(&quot; marco el puesto ATTIVA &quot;);&#xD;
				// La postazione diventa attiva e i dati recuperati vengono memorizzati&#xD;
				post.setState(StatePost.ATTIVA);&#xD;
				post.setStationIp(stationIp);&#xD;
				post.setSessionKey(sessionKey);&#xD;
				post.setAccountantPublicKey(accountantPublicKey);&#xD;
				post.setProcedureBallots(ballots);&#xD;
&#xD;
				if (Constants.verbose)&#xD;
					printSuccess(&quot;Attivazione Completata&quot;, &quot;La postazione è stata attivata!&quot;);&#xD;
&#xD;
				// Vengono informati view e utente&#xD;
				updateView();&#xD;
&#xD;
				// Se tutto ha avuto successo si notifica la propria attivazione al seggio&#xD;
				logger.debug(&quot; post.getStationIp() {} &quot;, post.getStationIp());&#xD;
				if (post.getStationIp() != null) {&#xD;
					notifyStateToStation(null);&#xD;
				}&#xD;
&#xD;
				urnThread = new UrnPolling(post.getUrnIp(), this, Terminals.Type.Post);&#xD;
				urnThread.start();&#xD;
			}&#xD;
		} catch (PEException e) {&#xD;
			// e.printStackTrace();&#xD;
			printError(e);&#xD;
		}&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhWjAtxYEeyZO8IXFiGgsA" name="askForUrnAuthentication" specification="_zOB-YNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhWjA9xYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhWjBNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>// Viene generato il nonce&#xD;
		int nonce1 = NonceManager.genSingleNonce();&#xD;
		// Il nonce viene cifrato&#xD;
		String encryptedNonce1 = AES.encryptNonce(nonce1, sessionKey);&#xD;
&#xD;
		Message response;&#xD;
		String errMsg = &quot;Attivazione fallita, impossibile contattare l'urna. Controllare che sia l'urna che questa postazione siano connessi alla rete.&quot;;&#xD;
		String ipRecipient = post.getUrnIp().getHostAddress();&#xD;
		try (Link link = createLink(post.getUrnIp(), post.getUrnPort(), null, errMsg)) {&#xD;
			if (link.isClosed()) {&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			// Indichiamo di volere iniziare la mutua autenticazione&#xD;
			link.write(Protocol.PostAuthenticationPhase1);&#xD;
			// Inviamo il nostro nonce cifrato&#xD;
			link.write(encryptedNonce1);&#xD;
&#xD;
			if (!link.hasNextLine()) {&#xD;
				throw CNNException.CNN_3(&quot;urna&quot;, ipRecipient);&#xD;
			}&#xD;
&#xD;
			// L'urna invia il messaggio di risposta&#xD;
			response = (Message) Message.fromB64(link.read(), &quot;urna&quot;);&#xD;
		} catch (Exception e) {&#xD;
			// throw new PEException(&quot;Impossibile comunicare con l'urna.&quot;,&#xD;
			// Category.Connection, e);&#xD;
			throw CNNException.CNN_1(&quot;urna&quot;, ipRecipient, e);&#xD;
		}&#xD;
&#xD;
		// Si verifica che il messaggio sia corretto e che abbia i campi richiesti&#xD;
		String[] required = { &quot;nonce1&quot;, &quot;nonce2&quot; };&#xD;
		Class&lt;?>[] types = { String.class, String.class };&#xD;
		response.verifyMessage(Protocol.validAuthentication, required, types, &quot;urna&quot;);&#xD;
&#xD;
		// Si leggono gli nonce cifrati&#xD;
		// Il primo è la risposta alla sfida lanciata all'urna&#xD;
		String encryptedModifiedNonce1 = response.getElement(&quot;nonce1&quot;);&#xD;
		// Il secondo è la sfida lanciata dall'urna&#xD;
		String encryptedNonce2 = response.getElement(&quot;nonce2&quot;);&#xD;
&#xD;
		// Si verifica che l'urna abbia superato la sfida&#xD;
		try {&#xD;
			if (!NonceManager.verifyChallenge(nonce1, encryptedModifiedNonce1, sessionKey, 1)) {&#xD;
				printError(&quot;Errore di Autenticazione&quot;, &quot;L'urna non si è autenticata correttamente.&quot;);&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
		} catch (PEException e) {&#xD;
			throw ENCException.ENC_6(e);&#xD;
		}&#xD;
&#xD;
		// Viene restituito il nonce cifrato da risolvere&#xD;
		return encryptedNonce2;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhXKENxYEeyZO8IXFiGgsA" name="authenticateToUrn" specification="_zODMgNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhXKEdxYEeyZO8IXFiGgsA" name="encryptedNonce2">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXKEtxYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXKE9xYEeyZO8IXFiGgsA" type="_zcreYNxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>// Si tenta di risolvere la sfida dell'urna ottenendo un nonce modificato e&#xD;
		// cifrato nuovamente.&#xD;
		String encryptedModifiedNonce2 = NonceManager.solveChallenge(encryptedNonce2, sessionKey, 2);&#xD;
&#xD;
		// Si contatta l'urna&#xD;
		Message response;&#xD;
		String errMsg = &quot;Attivazione fallita, impossibile contattare l'urna. Controllare che sia l'urna che questa postazione siano connessi alla rete.&quot;;&#xD;
		String ipRecipient = post.getUrnIp().getHostAddress();&#xD;
		try (Link link = createLink(post.getUrnIp(), post.getUrnPort(), null, errMsg)) {&#xD;
			// Indichiamo di volere procedere con la mutua autenticazione&#xD;
			link.write(Protocol.PostAuthenticationPhase2);&#xD;
			// Inviamo la nostra soluzione alla sfida lanciata dall'urna&#xD;
			link.write(encryptedModifiedNonce2);&#xD;
&#xD;
			if (!link.hasNextLine()) {&#xD;
				throw CNNException.CNN_3(&quot;urna&quot;, ipRecipient);&#xD;
			}&#xD;
&#xD;
			// L'urna invia la risposta&#xD;
			response = (Message) Message.fromB64(link.read(), &quot;urna&quot;);&#xD;
		} catch (Exception e) {&#xD;
			throw CNNException.CNN_1(&quot;urna&quot;, ipRecipient, e);&#xD;
		}&#xD;
&#xD;
		return response;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhXKFNxYEeyZO8IXFiGgsA" name="getPost" specification="_zODzkNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhXKFdxYEeyZO8IXFiGgsA" type="_zNa6YNxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>return post;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhXKFtxYEeyZO8IXFiGgsA" name="tryVoteSending" specification="_zODzkdxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Se la postazione non è in uso non effettuiamo operazioni&#xD;
		if (!correctState(StatePost.IN_USO))&#xD;
			return;&#xD;
&#xD;
		if (!printConfirmation(FileUtils.getResourceBundle(&quot;etiqueta_seguro_enviar_votos&quot;),&#xD;
				FileUtils.getResourceBundle(&quot;etiqueta_no_cambiar_opciones_elegidas&quot;)))&#xD;
			return;&#xD;
&#xD;
		try {&#xD;
			askForNonces();&#xD;
			sendVotes();&#xD;
&#xD;
			return;&#xD;
		} catch (PEException e) {&#xD;
			printError(e);&#xD;
		}&#xD;
&#xD;
		post.setState(StatePost.VOTO_PENDING);&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhXxINxYEeyZO8IXFiGgsA" name="resendVotes" specification="_zOEaoNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Se la postazione non è in vote_pending non effettuiamo operazioni&#xD;
		if (!correctState(StatePost.VOTO_PENDING))&#xD;
			return;&#xD;
&#xD;
		try {&#xD;
			askForNonces();&#xD;
			sendVotes();&#xD;
&#xD;
			printSuccess(&quot;Voti Inviati con Successo&quot;,&#xD;
					&quot;Il seggio ha ricevuto i voti. Tornare al seggio per concludere il voto.&quot;);&#xD;
		} catch (PEException e) {&#xD;
			if (e.getCode() != PEException.Code.FLR_0) {&#xD;
				printError(e);&#xD;
				return;&#xD;
			}&#xD;
&#xD;
			printError(&quot;Impossibile Inviare i Voti&quot;, &quot;Tornare al seggio per ricominciare la procedura di voto.&quot;);&#xD;
&#xD;
			post.setState(StatePost.DA_RESETTARE);&#xD;
			try {&#xD;
				notifyStateToStation(null);&#xD;
			} catch (PEException ignored) {&#xD;
			}&#xD;
&#xD;
			updateView();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhXxIdxYEeyZO8IXFiGgsA" name="selectCandidate" specification="_zOFBsNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhXxItxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXxI9xYEeyZO8IXFiGgsA" name="listName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXxJNxYEeyZO8IXFiGgsA" name="candidateID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXxJdxYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhXxJtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>// Si verifica se il candidato sta realmente presentandosi per la lista nella&#xD;
		// scheda i-esima&#xD;
		if (!post.validCandidate(ballotNum, listName, candidateID)) {&#xD;
			printError(&quot;Errore di Voto&quot;, &quot;Il candidato selezionato (&quot; + candidateID&#xD;
					+ &quot;) non è valido per la scheda corrente (&quot; + ballotNum + &quot;)&quot;);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		// Si tenta di aggiungere la preferenza ...&#xD;
		if (post.setPreference(ballotNum, candidateID, add)) {&#xD;
			return true;&#xD;
		}&#xD;
		// controllando di non aver superato il numero minimo (?) ...&#xD;
		else if (!add) {&#xD;
			printError(&quot;Errore di Voto: Impossibile rimuovere altre preferenze&quot;,&#xD;
					&quot;Numero minimo già raggiunto. Aggiungere una preferenza e riprovare.&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		// o massimo di preferenze&#xD;
		else {&#xD;
			printError(FileUtils.getResourceBundle(&quot;etiqueta_error_voto_no_mas_preferencias&quot;),&#xD;
					FileUtils.getResourceBundle(&quot;etiqueta_alcanzado_numero_maximo&quot;));&#xD;
			return false;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhYYMNxYEeyZO8IXFiGgsA" name="selectOption" specification="_zOGP0NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhYYMdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhYYMtxYEeyZO8IXFiGgsA" name="option">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhYYM9xYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhYYNNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>// Si verifica se l'opzione è realmente esistente per la scheda i-esima&#xD;
		if (!post.validOption(ballotNum, option)) {&#xD;
			printError(&quot;Errore di Voto&quot;,&#xD;
					&quot;Non è stato trovato alcuna opzione \&quot;&quot; + option + &quot;\&quot; per la scheda &quot; + ballotNum);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		// Per distinguere le preferenze dai candidati si aggiunge un prefisso&#xD;
		String markedOption = Protocol.isOption + option;&#xD;
&#xD;
		// Si tenta di aggiungere la preferenza ...&#xD;
		if (post.setPreference(ballotNum, markedOption, add)) {&#xD;
			return true;&#xD;
		}&#xD;
		// controllando di non aver superato il numero minimo (?) ...&#xD;
		else if (!add) {&#xD;
			printError(&quot;Errore di Voto&quot;, &quot;Non sono state selezionate sufficienti preferenze per questa scheda&quot;);&#xD;
			return false;&#xD;
		}&#xD;
		// o massimo di preferenze&#xD;
		else {&#xD;
			printError(&quot;Errore di Voto&quot;, &quot;Sono state selezionate troppe preferenze per questa scheda&quot;);&#xD;
			return false;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhYYNdxYEeyZO8IXFiGgsA" name="verifyStationIp" specification="_zfMm4NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhYYNtxYEeyZO8IXFiGgsA" name="ip" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhYYN9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>InetAddress stationIP = post.getStationIp();&#xD;
&#xD;
		if (stationIP == null)&#xD;
			return true; // -> così la postazione può rispondere a richieste sul proprio stato dai seggi,&#xD;
							// anche prima di essere attivata&#xD;
&#xD;
		if (stationIP.equals(ip))&#xD;
			return true;&#xD;
&#xD;
		printError(&quot;Comunicazione Inattesa&quot;,&#xD;
				&quot;Tentativo di connessione da parte di &quot; + ip.toString() + &quot;(sconosciuto) come seggio.&quot;);&#xD;
		return false;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhY_QNxYEeyZO8IXFiGgsA" name="setAssociation" specification="_zOIFANxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhY_QdxYEeyZO8IXFiGgsA" name="ballotCodes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhY_QtxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhY_Q9xYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhY_RNxYEeyZO8IXFiGgsA" type="_zcreYNxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>// Se la postazione non è attiva informiamo il seggio che non possiamo&#xD;
		// associarla&#xD;
		if (!correctState(StatePost.ATTIVA))&#xD;
			throw CNNException.CNN_2(&quot;postazione&quot;);&#xD;
&#xD;
		Message response = new Message();&#xD;
&#xD;
		// Verifichiamo che non sia ancora assegnato un badge alla postazione&#xD;
		String currentBadge = post.getBadge();&#xD;
		if (!currentBadge.equals(Protocol.unassignedPost))&#xD;
			response.addError(&quot;La postazione è già associata al badge:&quot; + currentBadge + &quot;.&quot;);&#xD;
&#xD;
		// Verifichiamo che non siano rimaste schede memorizzate&#xD;
		if (post.areBallotsSet(false))&#xD;
			response.addError(&quot;La postazione risulta essere già occupata.&quot;);&#xD;
&#xD;
		// Se qualche verifica non è stata superata informiamo il seggio&#xD;
		if (!response.getErrors().isEmpty()) {&#xD;
			response.setValue(Protocol.associationNack);&#xD;
			return response;&#xD;
		}&#xD;
&#xD;
		// Settiamo lo stato ad associata e memorizziamo i dati inviati dal seggio&#xD;
		post.setState(StatePost.ASSOCIATA);&#xD;
		post.setBallots(ballotCodes);&#xD;
		post.setBadgeID(badge);&#xD;
		post.setLastWrongBadge(null);&#xD;
&#xD;
		// Indichiamo nella risposta al seggio che l'associazione ha avuto successo&#xD;
		response.setValue(Protocol.associationAck);&#xD;
&#xD;
		// Aggiorniamo la view e stampiamo un messaggio informativo&#xD;
		if (Constants.verbose)&#xD;
			printSuccess(&quot;Postazione Associata&quot;, &quot;In attesa del Badge &quot; + badge);&#xD;
&#xD;
		if (Constants.postRfid &amp;&amp; rfidReader != null)&#xD;
			rfidReader.allowReading();&#xD;
&#xD;
		updateView();&#xD;
		return response;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhY_RdxYEeyZO8IXFiGgsA" name="badgeOut" specification="_zOJ6MNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Se la postazione non è nello stato &quot;voto inviato&quot; non procediamo&#xD;
		if (!correctState(StatePost.VOTO_INVIATO))&#xD;
			throw DEVException.DEV_05();&#xD;
&#xD;
		// Settiamo la postazione ad attiva, e resettiamo schede e badge.&#xD;
		post.setState(StatePost.ATTIVA);&#xD;
		post.resetInfo();&#xD;
&#xD;
		// Aggiorniamo la view&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhY_RtxYEeyZO8IXFiGgsA" name="notifyStateToStation" specification="_zfN1ANxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhY_R9xYEeyZO8IXFiGgsA" name="ipStation" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>logger.debug(&quot;notifyStateToStation {} &quot;, ipStation);&#xD;
		//Questo metodo viene chiamato con null da badgeIn(), con l'IP di chi ha avviato la connessione da Service&#xD;
		if(ipStation == null) {&#xD;
			ipStation = post.getStationIp();&#xD;
			&#xD;
			if(ipStation == null)&#xD;
				throw DEVException.DEV_01();&#xD;
		}&#xD;
		&#xD;
		logger.debug(&quot;Crear link desde el post con la station&quot;);&#xD;
		&#xD;
		//Crea la conexión del seggio con el postazione&#xD;
		//Crea la connessione al seggio per informarlo dello stato della postazione&#xD;
		try (Link link = createLink(ipStation, post.getStationPort(), null, null)){&#xD;
			if(link.isClosed()) &#xD;
				return;&#xD;
			&#xD;
			//Indichiamo al seggio l'intenzione di inviare lo stato&#xD;
			link.write(Protocol.informStatePost);&#xD;
			//Inviamo lo stato&#xD;
			link.write(post.getState());&#xD;
			Thread.sleep(200); 	//Añado pequeña espera para que de tiempo al Seggio al leer el mensaje&#xD;
		} catch (InterruptedException e) {&#xD;
			&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
			&#xD;
		&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhZmUNxYEeyZO8IXFiGgsA" name="resetPost" specification="_zOKhQNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Se la postazione è non attiva o offline torniamo senza effettuare modifiche&#xD;
		List&lt;State.StatePost> unresettableStates = List.of(StatePost.NON_ATTIVA, StatePost.OFFLINE,&#xD;
				StatePost.DA_RIAVVIARE);&#xD;
		if (unresettableStates.contains(post.getState()))&#xD;
			throw CNNException.CNN_2(&quot;postazione&quot;);&#xD;
&#xD;
		// Riportiamo la postazione allo stato attiva&#xD;
		post.setState(StatePost.ATTIVA);&#xD;
		post.resetInfo();&#xD;
&#xD;
		// Aggiorniamo la view&#xD;
		if (Constants.verbose)&#xD;
			printWarning(&quot;Terminale Resettato&quot;,&#xD;
					&quot;La postazione è stata resettata, tornare al seggio per ricominciare le operazioni di voto&quot;);&#xD;
&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhZmUdxYEeyZO8IXFiGgsA" name="setNewState" specification="_zfPDINxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhZmUtxYEeyZO8IXFiGgsA" name="stationIp" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhZmU9xYEeyZO8IXFiGgsA" name="newState" type="_zcsFcdxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>post.setState(newState);&#xD;
		updateView();&#xD;
&#xD;
		notifyStateToStation(stationIp);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhZmVNxYEeyZO8IXFiGgsA" name="deactivatePost" specification="_zOLIUNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>if (post.getState().equals(StatePost.NON_ATTIVA))&#xD;
			return;&#xD;
&#xD;
		deactivatePostOps();&#xD;
&#xD;
		if (Constants.verbose)&#xD;
			printWarning(&quot;Terminale Disattivato&quot;,&#xD;
					&quot;L'urna è stata spenta, la postazione è stata riportata allo stato 'NON ATTIVA'&quot;);&#xD;
&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhaNYNxYEeyZO8IXFiGgsA" name="correctState" specification="_zfPqMNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhaNYdxYEeyZO8IXFiGgsA" name="expectedState" type="_zcsFcdxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhaNYtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>StatePost state = post.getState();&#xD;
		if (!state.equals(expectedState)) {&#xD;
			printMessage(&quot;controller.correctState:Expected &quot; + expectedState + &quot; but found &quot; + state);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		if (!server.isRunning()) {&#xD;
			printMessage(&quot;controller.correctState:The server is not running!&quot;);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhaNY9xYEeyZO8IXFiGgsA" name="badgeIn" specification="_zOLvYNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhaNZNxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>// Effettua le verifiche necessarie ed eventualmente procede al cambio di stato&#xD;
		if (readBadge(badge)) {&#xD;
			try {&#xD;
				// Se tutto va bene notifichiamo il seggio&#xD;
				notifyStateToStation(null);&#xD;
			} catch (PEException e) {&#xD;
				printError(e);&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhaNZdxYEeyZO8IXFiGgsA" name="readBadge" specification="_zOMWcNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhaNZtxYEeyZO8IXFiGgsA" name="newBadge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhaNZ9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>// Se la postazione non è associata non effettuiamo alcuna operazione&#xD;
		if (!correctState(StatePost.ASSOCIATA))&#xD;
			return false;&#xD;
&#xD;
		// Verifichiamo che il badge presentato corrisponda a quello atteso&#xD;
		String correctBadge = post.getBadge();&#xD;
&#xD;
		// Il valore -1 sta per badge non assegnato&#xD;
		if (correctBadge.equals(Protocol.unassignedPost)) {&#xD;
			printError(&quot;Errore di Associazione&quot;, &quot;A questa postazione non è stato assegnato alcun badge&quot;);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		// Se i badge hanno valore diverso mostriamo un errore a schermo e non&#xD;
		// procediamo&#xD;
		if (!newBadge.equals(correctBadge)) {&#xD;
			String lastWrongBadge = post.getLastWrongBadge();&#xD;
			if (lastWrongBadge == null || !newBadge.equals(post.getLastWrongBadge())) {&#xD;
				post.setLastWrongBadge(newBadge);&#xD;
				updateView();&#xD;
			}&#xD;
&#xD;
			if (Constants.postRfid &amp;&amp; rfidReader != null)&#xD;
				rfidReader.allowReading();&#xD;
&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		// Se non sono stati inizializzati i vettori di schede vuote e schede compilate&#xD;
		// non procediamo&#xD;
		if (!post.areBallotsSet(true)) {&#xD;
			printError(&quot;Errore di Associazione&quot;, &quot;Nessuna scheda di voto è stata associata a questa postazione&quot;);&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		// Settiamo lo stato a &quot;in uso&quot;&#xD;
		post.setState(StatePost.IN_USO);&#xD;
&#xD;
		// Aggiorniamo la view&#xD;
		updateView();&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zha0cNxYEeyZO8IXFiGgsA" name="askForNonces" specification="_zOM9gNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Se la postazione non è &quot;in uso&quot; non effettuiamo alcuna operazione&#xD;
		if (!correctState(StatePost.IN_USO) &amp;&amp; !correctState(StatePost.VOTO_PENDING))&#xD;
			throw DEVException.DEV_05();&#xD;
&#xD;
		if (post.getVotesNonces() != null)&#xD;
			return;&#xD;
&#xD;
		String failure = &quot;Invio voto fallito.&quot;;&#xD;
		String solving = &quot;Assicurarsi che sia questa postazione che l'urna siano connessi.&quot;;&#xD;
&#xD;
		// Si recupera il vettore delle preferenze esprimibili delle schede&#xD;
		int[] maxPreferences = post.getBallotsMaxPreferences();&#xD;
		if (maxPreferences == null)&#xD;
			throw DEVException.DEV_05();&#xD;
&#xD;
		// Si prepara la richiesta all'urna inserendo la struttura delle preferenze&#xD;
		Message request = new Message(Protocol.nonceReq);&#xD;
		request.setElement(&quot;numPreferences&quot;, maxPreferences);&#xD;
&#xD;
		// Ci connettiamo all'urna&#xD;
		// Si invia la richiesta e si aspetta la risposta&#xD;
		Message response;&#xD;
		String recipientIp = post.getUrnIp().getHostAddress();&#xD;
		try (Link link = createLink(post.getUrnIp(), post.getUrnPort(), null, failure + &quot;\n&quot; + solving)) {&#xD;
			if (link.isClosed())&#xD;
				throw CNNException.CNN_3(&quot;urna&quot;, recipientIp);&#xD;
&#xD;
			link.write(Protocol.nonceReq);&#xD;
			link.write(request.toB64());&#xD;
&#xD;
			if (!link.hasNextLine())&#xD;
				throw CNNException.CNN_3(&quot;urna&quot;, recipientIp);&#xD;
&#xD;
			response = (Message) Message.fromB64(link.read(), &quot;urna&quot;);&#xD;
		} catch (Exception e) {&#xD;
			throw CNNException.CNN_1(&quot;urna&quot;, recipientIp, null);&#xD;
		}&#xD;
&#xD;
		// Si verifica che il messaggio di risposta sia corretto e abbia i campi&#xD;
		// richiesti&#xD;
		String[] required = { &quot;nonces&quot; };&#xD;
		Class&lt;?>[] types = { String[][].class };&#xD;
		response.verifyMessage(Protocol.nonceAck, required, types, &quot;urna&quot;);&#xD;
&#xD;
		// Gli nonce vengono prelevati dal messaggio e restituiti al chiamante&#xD;
		String[][] encryptedNonces = response.getElement(&quot;nonces&quot;);&#xD;
		post.setVotesNonces(encryptedNonces);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zha0cdxYEeyZO8IXFiGgsA" name="sendVotes" specification="_zONkkNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>// Recuperiamo chiave pubblica, chiave di sessione e (una copia delle) schede&#xD;
		// compilate&#xD;
		byte[] pubKey = post.getAccountantPublicKey();&#xD;
		String sessionKey = post.getSessionKey();&#xD;
		WrittenBallot[] encryptedBallots = post.getWrittenBallotsCopy();&#xD;
		String[][] encryptedNonces = post.getVotesNonces();&#xD;
&#xD;
		if (pubKey == null)&#xD;
			throw DEVException.DEV_03(&quot;la chiave pubblica&quot;);&#xD;
&#xD;
		if (sessionKey == null)&#xD;
			throw DEVException.DEV_03(&quot;la chiave di sessione&quot;);&#xD;
&#xD;
		if (encryptedBallots == null)&#xD;
			throw DEVException.DEV_05();&#xD;
&#xD;
		if (encryptedNonces == null)&#xD;
			throw DEVException.DEV_05();&#xD;
&#xD;
		String failure = &quot;Invio voto fallito&quot;;&#xD;
		String solving = &quot;Assicurarsi che sia questa postazione che il seggio siano connessi.&quot;;&#xD;
&#xD;
		// Cifriamo le schede compilate&#xD;
		try {&#xD;
			int i = 0;&#xD;
			for (WrittenBallot ballot : encryptedBallots) {&#xD;
				ballot.encryptBallot(pubKey, encryptedNonces[i], sessionKey);&#xD;
				i++;&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			throw ENCException.ENC_1(&quot;i voti&quot;, e);&#xD;
		}&#xD;
&#xD;
		// Creiamo la richiesta con le schede cifrate&#xD;
		Message request = new Message(Protocol.sendVoteToStation);&#xD;
		request.setElement(&quot;encryptedBallots&quot;, encryptedBallots);&#xD;
&#xD;
		// Ci connettiamo al seggio&#xD;
		// Inviamo la richiesta e salviamo la risposta del seggio&#xD;
		String received;&#xD;
		String errMsg = failure + &quot;\nImpossibile contattare il seggio all'ip: &quot; + post.getStationIp() + &quot;.\n&quot; + solving;&#xD;
		InetAddress stationIp = post.getStationIp();&#xD;
&#xD;
		if (stationIp == null)&#xD;
			throw DEVException.DEV_01();&#xD;
&#xD;
		String recipientIp = stationIp.getHostAddress();&#xD;
		try (Link link = createLink(stationIp, post.getStationPort(), null, errMsg)) {&#xD;
			if (link.isClosed())&#xD;
				throw CNNException.CNN_3(&quot;seggio&quot;, recipientIp);&#xD;
&#xD;
			link.write(Protocol.sendVoteToStation);&#xD;
			link.write(request.toB64());&#xD;
&#xD;
			if (!link.hasNextLine())&#xD;
				throw CNNException.CNN_3(&quot;seggio&quot;, recipientIp);&#xD;
&#xD;
			// TODO: diventare message&#xD;
			received = link.read();&#xD;
		} catch (Exception e) {&#xD;
			throw CNNException.CNN_1(&quot;seggio&quot;, null, e);&#xD;
		}&#xD;
&#xD;
		// Se la risposta non è voto ricevuto, qualcosa è andato storto&#xD;
		if (!received.equals(Protocol.votesReceivedAck)) {&#xD;
			throw FLRException.FLR_0(null);&#xD;
		}&#xD;
&#xD;
		// Settiamo lo stato a voto inviato e eliminiamo le schede in memoria&#xD;
		post.setState(StatePost.VOTO_INVIATO);&#xD;
		post.setBallots(null);&#xD;
&#xD;
		// Aggiorniamo la view&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zha0ctxYEeyZO8IXFiGgsA" name="deactivatePostOps" specification="_zONkkdxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>post.setState(StatePost.NON_ATTIVA);&#xD;
&#xD;
		try {&#xD;
			post.resetInfo();&#xD;
		} catch (PEException ignored) {&#xD;
		}&#xD;
&#xD;
		stopUrnThread();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zha0c9xYEeyZO8IXFiGgsA" name="readCard" specification="_zOOLoNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zha0dNxYEeyZO8IXFiGgsA" name="card">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zha0ddxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (Constants.devMode) {&#xD;
			if (card.equals(&quot;off&quot;)) {&#xD;
				post.setSimulateOffline(true);&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;on&quot;)) {&#xD;
				post.setSimulateOffline(false);&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;info&quot;)) {&#xD;
				printWarning(&quot;Info Stato&quot;, String.valueOf(post.getState()));&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			Random r = new Random(System.currentTimeMillis());&#xD;
&#xD;
			if (card.equals(&quot;att&quot;)) {&#xD;
				post.setState(State.StatePost.ATTIVA);&#xD;
&#xD;
				try {&#xD;
					post.resetInfo();&#xD;
				} catch (PEException ignored) {&#xD;
				}&#xD;
&#xD;
				updateView();&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;ass&quot;)) {&#xD;
				post.setState(State.StatePost.ASSOCIATA);&#xD;
				if (r.nextInt() % 2 == 0)&#xD;
					post.setBadgeID(String.valueOf(Math.abs(r.nextInt())));&#xD;
&#xD;
				updateView();&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;uso&quot;)) {&#xD;
				post.setState(State.StatePost.IN_USO);&#xD;
				if (r.nextInt() % 2 == 0)&#xD;
					post.setBadgeID(String.valueOf(Math.abs(r.nextInt())));&#xD;
&#xD;
				updateView();&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;inv&quot;)) {&#xD;
				post.setState(State.StatePost.VOTO_INVIATO);&#xD;
				if (r.nextInt() % 2 == 0)&#xD;
					post.setBadgeID(String.valueOf(Math.abs(r.nextInt())));&#xD;
&#xD;
				updateView();&#xD;
				return null;&#xD;
			}&#xD;
&#xD;
			if (card.equals(&quot;nonatt&quot;)) {&#xD;
				post.setState(State.StatePost.NON_ATTIVA);&#xD;
				try {&#xD;
					post.resetInfo();&#xD;
				} catch (PEException ignored) {&#xD;
				}&#xD;
&#xD;
				updateView();&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		try {&#xD;
			if (!card.equals(CardReader.exit)) {&#xD;
				this.badgeIn(card);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
		}&#xD;
&#xD;
		return null;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhbbgNxYEeyZO8IXFiGgsA" name="invalidAuthentication" specification="_zOQn4NxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>if (post.getState() == StatePost.NON_ATTIVA)&#xD;
			return;&#xD;
&#xD;
		deactivatePostOps();&#xD;
&#xD;
		try {&#xD;
			notifyStateToStation(null);&#xD;
		} catch (PEException e) {&#xD;
		}&#xD;
&#xD;
		printError(&quot;Autenticazione Non Valida&quot;,&#xD;
				&quot;L'urna non riconosce questa postazione come valida, è necessario effettuare nuovamente l'autenticazione.&quot;);&#xD;
		updateView();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhbbgdxYEeyZO8IXFiGgsA" name="verifyUrnIp" specification="_zfQRQNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhbbgtxYEeyZO8IXFiGgsA" name="ip" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhbbg9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (ip.equals(post.getUrnIp()))&#xD;
			return true;&#xD;
&#xD;
		printError(&quot;Comunicazione Inattesa&quot;,&#xD;
				&quot;Tentativo di connessione da parte di &quot; + ip.toString() + &quot;(sconosciuto) come urna.&quot;);&#xD;
		return false;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhcCkNxYEeyZO8IXFiGgsA" name="beforeStartOps" specification="_zOR2ANxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhcCkdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhcCktxYEeyZO8IXFiGgsA" name="afterClosureOps" specification="_zOTrMNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>if (post.getState() == StatePost.NON_ATTIVA)&#xD;
			return;&#xD;
&#xD;
		signalShutDown(post.getUrnIp(), Constants.portUrn);&#xD;
&#xD;
		post.setState(StatePost.OFFLINE);&#xD;
		try {&#xD;
			notifyStateToStation(null);&#xD;
		} catch (PEException e) {&#xD;
		}&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhcCk9xYEeyZO8IXFiGgsA" name="setRfidReachable" specification="_zOU5UNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhcClNxYEeyZO8IXFiGgsA" name="reachable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (reachable != post.isRfidReaderReachable()) {&#xD;
			post.setRfidReaderReachable(reachable);&#xD;
			updateView();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zOBXUNxYEeyZO8IXFiGgsA" name="activate" method="_zhWjANxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn4txYEeyZO8IXFiGgsA">
              <body>Funzione che tenta di portare a termine la mutua autenticazione con l'urna.&#xD;
	 * &#xD;
	 * @param sessionKey La chiave di sessione inserita per creare e superare le&#xD;
	 *                   sfide basate su nonce.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOBXUdxYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOB-YNxYEeyZO8IXFiGgsA" name="askForUrnAuthentication" visibility="private" method="_zhWjAtxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn49xYEeyZO8IXFiGgsA">
              <body>Prima fase della mutua autenticazione con l'urna. Se dovesse avere successo&#xD;
	 * verrà restituito il nonce cifrato inviato dall'urna per il superamento della&#xD;
	 * sfida.&#xD;
	 * &#xD;
	 * @param sessionKey Chiave di sessione.&#xD;
	 * @return Il nonce cifrato inviato dall'urna o null.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOB-YdxYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOClcNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zODMgNxYEeyZO8IXFiGgsA" name="authenticateToUrn" visibility="private" method="_zhXKENxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn5NxYEeyZO8IXFiGgsA">
              <body>Seconda fase della mutua autenticazione con l'urna. Se dovesse avere successo&#xD;
	 * la postazione sarà correttamente attivata.&#xD;
	 * &#xD;
	 * @param encryptedNonce2 Nonce cifrato dall'urna come sfida.&#xD;
	 * @param sessionKey      Chiave di sessione.&#xD;
	 * @return response Il messaggio restituito dall'urna in seguito alla risposta&#xD;
	 *         alla sfida</body>
            </ownedComment>
            <ownedParameter xmi:id="_zODMgdxYEeyZO8IXFiGgsA" name="encryptedNonce2">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zODMgtxYEeyZO8IXFiGgsA" name="sessionKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zfL_0NxYEeyZO8IXFiGgsA" type="_zcreYNxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zODzkNxYEeyZO8IXFiGgsA" name="getPost" method="_zhXKFNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn5dxYEeyZO8IXFiGgsA">
              <body>Restituisce il model alle classi della view.&#xD;
	 * &#xD;
	 * @return La postazione.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zeElgNxYEeyZO8IXFiGgsA" type="_zNa6YNxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zODzkdxYEeyZO8IXFiGgsA" name="tryVoteSending" method="_zhXKFtxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn5txYEeyZO8IXFiGgsA">
              <body>Funzione che cifra e invia i pacchetti di voto al seggio.&#xD;
	 * &#xD;
	 * @return</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zOEaoNxYEeyZO8IXFiGgsA" name="resendVotes" method="_zhXxINxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zOFBsNxYEeyZO8IXFiGgsA" name="selectCandidate" method="_zhXxIdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn59xYEeyZO8IXFiGgsA">
              <body>Funzione richiamata dalla view per aggiungere la preferenza ad un candidato.&#xD;
	 * &#xD;
	 * @param ballotNum   Il numero della scheda.&#xD;
	 * @param listName    Il nome della lista del candidato.&#xD;
	 * @param candidateID L'ID del candidato.&#xD;
	 * @param add         Vero o falso a seconda se si vuole selezionare o&#xD;
	 *                    deselezionare il candidato.&#xD;
	 * @return Vero o falso a seconda se l'operazione ha avuto successo.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOFBsdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOFBstxYEeyZO8IXFiGgsA" name="listName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOFBs9xYEeyZO8IXFiGgsA" name="candidateID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOFBtNxYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOFowNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOGP0NxYEeyZO8IXFiGgsA" name="selectOption" method="_zhYYMNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyn6NxYEeyZO8IXFiGgsA">
              <body>Funzione richiamata dalla view per aggiungere la preferenza ad una opzione.&#xD;
	 * &#xD;
	 * @param ballotNum Il numero della scheda.&#xD;
	 * @param option    La stringa relativa all'opzione da aggiungere/rimuovere.&#xD;
	 * @param add       True per l'aggiunzione, false per la rimozione.&#xD;
	 * @return L'esito dell'operazione.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOGP0dxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOGP0txYEeyZO8IXFiGgsA" name="option">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOG24NxYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOG24dxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOIFANxYEeyZO8IXFiGgsA" name="setAssociation" visibility="package" method="_zhY_QNxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO8dxYEeyZO8IXFiGgsA">
              <body>Funzione richiamata quando il server riceve una richiesta di associazione da&#xD;
	 * parte del seggio.&#xD;
	 * &#xD;
	 * @param ballotCodes La lista dei codici delle schede di questa procedura&#xD;
	 *                    valide per il votante.&#xD;
	 * @param badge       Il badge di questa associazione.&#xD;
	 * @return Il messaggio di risposta per il seggio.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOIFAdxYEeyZO8IXFiGgsA" name="ballotCodes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zOIsEdxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOIsENxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zfNN8NxYEeyZO8IXFiGgsA" type="_zcreYNxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zOJ6MNxYEeyZO8IXFiGgsA" name="badgeOut" visibility="package" method="_zhY_RdxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO8txYEeyZO8IXFiGgsA">
              <body>Funzione richiamata quando il seggio legge il badge associato a questa&#xD;
	 * postazione. Significa che la votazione è anda a buon fine e possiamo di nuovo&#xD;
	 * rendere disponibile (attiva) la postazione.&#xD;
	 * &#xD;
	 * @throws PEException Nel caso in cui il voto non venga correttamente&#xD;
	 *                     registrato per qualsiasi motivo.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zOKhQNxYEeyZO8IXFiGgsA" name="resetPost" visibility="package" method="_zhZmUNxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO9NxYEeyZO8IXFiGgsA">
              <body>Funzione il cui scopo è gestire quasi qualunque tipo di errore di&#xD;
	 * sincronizzazione con il seggio. Se si rendesse necessario il seggio può&#xD;
	 * ordinare alla postazione di resettarsi nello stato attiva, eventualmente&#xD;
	 * ricominciando da zero le operazioni di voto del votante. Non è permesso il&#xD;
	 * reset se la postazione dovesse risultare non ancora attivata visto che le&#xD;
	 * operazioni di mutua autenticazione non devono essere saltate, o offline&#xD;
	 * (attualmente non viene mai settato questo stato e forse verrà proprio&#xD;
	 * eliminato).&#xD;
	 * &#xD;
	 * @throws PEException Se l'operazione non dovesse avere successo.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zOLIUNxYEeyZO8IXFiGgsA" name="deactivatePost" visibility="package" method="_zhZmVNxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zOLvYNxYEeyZO8IXFiGgsA" name="badgeIn" visibility="private" method="_zhaNY9xYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO9txYEeyZO8IXFiGgsA">
              <body>Funzione richiamata quando un badge è letto dal reader RFID. Verifica se il&#xD;
	 * badge è quello corretto e se sono presenti le schede necessarie e in caso&#xD;
	 * positivo notifica al seggio il cambio di stato in &quot;in uso&quot;.&#xD;
	 * &#xD;
	 * @param badge Il badge letto dal reader RFID.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOLvYdxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOMWcNxYEeyZO8IXFiGgsA" name="readBadge" visibility="private" method="_zhaNZdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO99xYEeyZO8IXFiGgsA">
              <body>Funzione che aggiorna lo stato da associata a &quot;in uso&quot; se il badge presentato&#xD;
	 * è quello corretto.&#xD;
	 * &#xD;
	 * @param newBadge Il badge presentato.&#xD;
	 * @return Vero o falso a seconda se l'operazione ha avuto successo.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zOMWcdxYEeyZO8IXFiGgsA" name="newBadge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOMWctxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOM9gNxYEeyZO8IXFiGgsA" name="askForNonces" visibility="private" method="_zha0cNxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO-NxYEeyZO8IXFiGgsA">
              <body>Funzione che contatta l'urna per ottenere gli nonce necessari per inviare i&#xD;
	 * voti.&#xD;
	 * &#xD;
	 * @return Gli nonce (cifrati) &quot;sfida&quot; dell'urna o null se qualcosa andasse&#xD;
	 *         storto.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zONkkNxYEeyZO8IXFiGgsA" name="sendVotes" visibility="private" method="_zha0cdxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO-dxYEeyZO8IXFiGgsA">
              <body>Funzione richiamata per cifrare i pacchetti di voto e inviarli al seggio.&#xD;
	 * &#xD;
	 * @param encryptedNonces Nonce cifrati inviati dall'urna come sfida per&#xD;
	 *                        l'autenticazione.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zONkkdxYEeyZO8IXFiGgsA" name="deactivatePostOps" visibility="private" method="_zha0ctxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zOOLoNxYEeyZO8IXFiGgsA" name="readCard" method="_zha0c9xYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zOOLodxYEeyZO8IXFiGgsA" name="card">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zOOysNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOQn4NxYEeyZO8IXFiGgsA" name="invalidAuthentication" visibility="protected" method="_zhbbgNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zOR2ANxYEeyZO8IXFiGgsA" name="beforeStartOps" visibility="protected" method="_zhcCkNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zOSdENxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zOTrMNxYEeyZO8IXFiGgsA" name="afterClosureOps" visibility="protected" method="_zhcCktxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zOU5UNxYEeyZO8IXFiGgsA" name="setRfidReachable" method="_zhcCk9xYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zOU5UdxYEeyZO8IXFiGgsA" name="reachable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zfJjkNxYEeyZO8IXFiGgsA" name="Controller" method="_zhV78NxYEeyZO8IXFiGgsA">
            <eAnnotations xmi:id="_zfKKodxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_zfKKotxYEeyZO8IXFiGgsA" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_zhyn4NxYEeyZO8IXFiGgsA">
              <body>Costruttore adoperato per il testing.&#xD;
	 * &#xD;
	 * @param server Il server fittizio (classe TestServer)&#xD;
	 * @param view   Lo stream di output che fa da view fittizia.&#xD;
	 * @param post   Classe model.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfJjkdxYEeyZO8IXFiGgsA" name="server" type="_zd930dxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfJjktxYEeyZO8IXFiGgsA" name="view" type="_zeCwUNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfKKoNxYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfKKo9xYEeyZO8IXFiGgsA" type="_zN9F4NxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zfKxsNxYEeyZO8IXFiGgsA" name="Controller" method="_zhV79dxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <eAnnotations xmi:id="_zfLYwtxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_zfLYw9xYEeyZO8IXFiGgsA" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_zhyn4dxYEeyZO8IXFiGgsA">
              <body>Costruttore reale.&#xD;
	 * &#xD;
	 * @param view Lo stream di output da cui legge la view.&#xD;
	 * @param post Classe model.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfLYwNxYEeyZO8IXFiGgsA" name="view" type="_zeCwUNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfLYwdxYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfLYxNxYEeyZO8IXFiGgsA" type="_zN9F4NxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zfMm4NxYEeyZO8IXFiGgsA" name="verifyStationIp" visibility="package" method="_zhYYNdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO8NxYEeyZO8IXFiGgsA">
              <body>Funzione per verificare che l'ip di chi sta contattando il server corrisponda&#xD;
	 * a quello del seggio.&#xD;
	 * &#xD;
	 * @param ip L'ip del mittente.&#xD;
	 * @return Vero o falso a seconda se il mittente è davvero il seggio.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfMm4dxYEeyZO8IXFiGgsA" name="ip" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfMm4txYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zfN1ANxYEeyZO8IXFiGgsA" name="notifyStateToStation" visibility="package" method="_zhY_RtxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO89xYEeyZO8IXFiGgsA">
              <body>Funzione che notifica il seggio di un cambiamento di stato.&#xD;
	 * Viene richiamata sia da funzioni server che client, dato che i cambiamenti di stato&#xD;
	 * possono essere causati sia dalla view che dal seggio.&#xD;
	 * @param ipStation L'ip del mittente, utile nel caso la postazione non sia stata ancora attivata e quindi non conosca l'ip del proprio seggio.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfN1AdxYEeyZO8IXFiGgsA" name="ipStation" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zfPDINxYEeyZO8IXFiGgsA" name="setNewState" visibility="package" method="_zhZmUdxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zfPDIdxYEeyZO8IXFiGgsA" name="stationIp" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfPDItxYEeyZO8IXFiGgsA" name="newState" type="_zcsFcdxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zfPqMNxYEeyZO8IXFiGgsA" name="correctState" method="_zhaNYNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhzO9dxYEeyZO8IXFiGgsA">
              <body>Funzione che permette di usare la postazione come una macchina a stati&#xD;
	 * finiti. Ogni funzione che richiede di essere in un particolare stato richiama&#xD;
	 * questa per il controllo.&#xD;
	 * &#xD;
	 * @param expectedState Stato della postazione in cui è necessario trovarsi.&#xD;
	 * @return Vero o falso a seconda se il server è attivo e lo stato è quello&#xD;
	 *         corretto.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfPqMdxYEeyZO8IXFiGgsA" name="expectedState" type="_zcsFcdxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfPqMtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zfQRQNxYEeyZO8IXFiGgsA" name="verifyUrnIp" visibility="protected" method="_zhbbgdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhz2ANxYEeyZO8IXFiGgsA">
              <body>Verifica che l'ip dal quale è arrivato un messaggio il cui mittente dovrebbe&#xD;
	 * essere l'urna appartenga effettivamente ad essa.&#xD;
	 * &#xD;
	 * @param ip L'ip da verificare.&#xD;
	 * @return True o false a seconda se l'ip appartiene all'urna.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zfQ4UNxYEeyZO8IXFiGgsA" name="ip" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfQ4UdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziEUsdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziEUstxYEeyZO8IXFiGgsA _zfZbMdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziEUstxYEeyZO8IXFiGgsA" name="" type="_zMH54NxYEeyZO8IXFiGgsA" association="_ziEUsdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziFi0NxYEeyZO8IXFiGgsA" name="" memberEnd="_ziFi0dxYEeyZO8IXFiGgsA _zfaCQdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziFi0dxYEeyZO8IXFiGgsA" name="" type="_zMH54NxYEeyZO8IXFiGgsA" association="_ziFi0NxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zijc4dxYEeyZO8IXFiGgsA" name="" memberEnd="_zijc4txYEeyZO8IXFiGgsA _zgg1gNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zijc4txYEeyZO8IXFiGgsA" name="" type="_zN9F4NxYEeyZO8IXFiGgsA" association="_zijc4dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zikrAdxYEeyZO8IXFiGgsA" name="" memberEnd="_zikrAtxYEeyZO8IXFiGgsA _zghckdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zikrAtxYEeyZO8IXFiGgsA" name="" type="_zN9F4NxYEeyZO8IXFiGgsA" association="_zikrAdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIeI8NxYEeyZO8IXFiGgsA" name="model">
        <packagedElement xmi:type="uml:Class" xmi:id="_zNa6YNxYEeyZO8IXFiGgsA" name="Post">
          <generalization xmi:id="_zfDc8NxYEeyZO8IXFiGgsA" general="_zdq84dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zgKQMNxYEeyZO8IXFiGgsA" name="stationIp" type="_zb9FoNxYEeyZO8IXFiGgsA" association="_zia6AdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zgNTgNxYEeyZO8IXFiGgsA" name="stationPort" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgN6kNxYEeyZO8IXFiGgsA" name="numConnections" visibility="private" isLeaf="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgOhodxYEeyZO8IXFiGgsA" name="accountantPubKey" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zgPIsNxYEeyZO8IXFiGgsA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgQW0NxYEeyZO8IXFiGgsA" name="sessionKey">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgQW0dxYEeyZO8IXFiGgsA" name="badgeID" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgQW0txYEeyZO8IXFiGgsA" value="Protocol.unassignedPost"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgQ94dxYEeyZO8IXFiGgsA" name="lastWrongBadge" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgRk8NxYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgSMANxYEeyZO8IXFiGgsA" name="procedureBallots" visibility="private" type="_zdpuwNxYEeyZO8IXFiGgsA" association="_zicIIdxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgSzEdxYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgTaIdxYEeyZO8IXFiGgsA" name="votesNonces">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zgUBMNxYEeyZO8IXFiGgsA" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgUoQNxYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgUoQdxYEeyZO8IXFiGgsA" name="emptyBallots" type="_zdc6cNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zidWQNxYEeyZO8IXFiGgsA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zgUoQtxYEeyZO8IXFiGgsA" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgVPUdxYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgV2YNxYEeyZO8IXFiGgsA" name="writtenBallots" type="_zdfWsNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zid9UdxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgXEgNxYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgXEgdxYEeyZO8IXFiGgsA" name="state" type="_zcsFcdxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgXEgtxYEeyZO8IXFiGgsA" value="StatePost.NON_ATTIVA"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgXrkNxYEeyZO8IXFiGgsA" name="simulateOffline" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zgXrkdxYEeyZO8IXFiGgsA" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhMyAdxYEeyZO8IXFiGgsA" name="Post" specification="_zfAZoNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhMyAtxYEeyZO8IXFiGgsA" name="urnIp" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhMyA9xYEeyZO8IXFiGgsA" name="urnPort">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhMyBNxYEeyZO8IXFiGgsA" name="stationPort">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhMyBdxYEeyZO8IXFiGgsA" name="numConnections">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhMyBtxYEeyZO8IXFiGgsA" type="_zNa6YNxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>this.urnIp = urnIp;&#xD;
		this.urnPort = urnPort;&#xD;
		this.stationPort = stationPort;&#xD;
		this.numConnections = numConnections;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhNZENxYEeyZO8IXFiGgsA" name="resetInfo" specification="_zNdWoNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>setBallots(null);&#xD;
		setVotesNonces(null);&#xD;
		setBadgeID(Protocol.unassignedPost);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhNZEdxYEeyZO8IXFiGgsA" name="getStationPort" specification="_zNd9sNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhNZEtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return stationPort;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhOAINxYEeyZO8IXFiGgsA" name="getBadge" specification="_zNfL0NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhOAIdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.badgeID;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhOAItxYEeyZO8IXFiGgsA" name="setBadgeID" specification="_zNfy4dxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhOAI9xYEeyZO8IXFiGgsA" name="badgeID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.badgeID = badgeID;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhOAJNxYEeyZO8IXFiGgsA" name="getNumConnections" specification="_zNgZ8dxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhOAJdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return numConnections;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhOnMNxYEeyZO8IXFiGgsA" name="setBallots" specification="_zNhBAdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhOnMdxYEeyZO8IXFiGgsA" name="codes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhOnMtxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>if(codes == null) {&#xD;
			emptyBallots = null;&#xD;
			writtenBallots = null;&#xD;
			return;&#xD;
		}&#xD;
		&#xD;
		emptyBallots = getEmptyBallots(codes);&#xD;
		&#xD;
		writtenBallots = new ArrayList&lt;>();&#xD;
		for(EmptyBallot ballot : emptyBallots) {&#xD;
			writtenBallots.add(new WrittenBallot(ballot.getTitle(), ballot.getCode(), ballot.getMaxPreferences()));&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhOnM9xYEeyZO8IXFiGgsA" name="validCandidate" specification="_zNiPINxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhOnNNxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhOnNdxYEeyZO8IXFiGgsA" name="listName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhOnNtxYEeyZO8IXFiGgsA" name="candidateID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhOnN9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if(ballotNum >= emptyBallots.length) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		ArrayList&lt;ElectoralList> lists = emptyBallots[ballotNum].getLists();&#xD;
		&#xD;
		for(ElectoralList list : lists) {&#xD;
			if(list.getName().equals(listName)) {&#xD;
				return list.contains(candidateID);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhPOQNxYEeyZO8IXFiGgsA" name="validOption" specification="_zNjdQNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhPOQdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhPOQtxYEeyZO8IXFiGgsA" name="selectedOption">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhPOQ9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if(ballotNum >= emptyBallots.length) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		ArrayList&lt;String> options = emptyBallots[ballotNum].getOptions();&#xD;
		&#xD;
		for(String option : options) {&#xD;
			if(selectedOption.equals(option)) {&#xD;
				return true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhPORNxYEeyZO8IXFiGgsA" name="setPreference" specification="_zNkEUNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhPORdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhPORtxYEeyZO8IXFiGgsA" name="preference">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhPOR9xYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhPOSNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>WrittenBallot ballot = writtenBallots.get(ballotNum);&#xD;
		&#xD;
		return add ? ballot.addPreference(preference) : ballot.removePreference(preference);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhP1UNxYEeyZO8IXFiGgsA" name="setProcedureBallots" specification="_zfCO0NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhP1UdxYEeyZO8IXFiGgsA" name="ballots" type="_zdc6cNxYEeyZO8IXFiGgsA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhP1UtxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>procedureBallots = new HashMap&lt;Integer, EmptyBallot>();&#xD;
		&#xD;
		for(EmptyBallot ballot : ballots) {&#xD;
			procedureBallots.put(ballot.getCode(), ballot);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhP1U9xYEeyZO8IXFiGgsA" name="getEmptyBallots" specification="_zNlScNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhP1VNxYEeyZO8IXFiGgsA" name="codes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhP1VdxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhP1VtxYEeyZO8IXFiGgsA" type="_zdc6cNxYEeyZO8IXFiGgsA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhP1V9xYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>int len = codes.length;&#xD;
		&#xD;
		if(len == 0) {&#xD;
			throw DBException.DB_10();&#xD;
		}&#xD;
		&#xD;
		EmptyBallot[] ballots = new EmptyBallot[len];&#xD;
		&#xD;
		for(int i = 0; i &lt; len; i++) {&#xD;
			int code = codes[i];&#xD;
			&#xD;
			EmptyBallot ballot = procedureBallots.get(code);&#xD;
			&#xD;
			if(ballot == null) {&#xD;
				throw DBException.DB_11(code);&#xD;
			}&#xD;
			&#xD;
			ballots[i] = ballot;&#xD;
		}&#xD;
		&#xD;
		return ballots;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhQcYNxYEeyZO8IXFiGgsA" name="getWrittenBallotsCopy" specification="_zNmgkdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhQcYdxYEeyZO8IXFiGgsA" type="_zdeIkNxYEeyZO8IXFiGgsA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhQcYtxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>if(writtenBallots == null) {&#xD;
			return null;&#xD;
		}&#xD;
		&#xD;
		WrittenBallot[] wb = new WrittenBallot[writtenBallots.size()];&#xD;
		&#xD;
		int i = 0;&#xD;
		for(WrittenBallot ballot : writtenBallots) {&#xD;
			wb[i] = new WrittenBallot(ballot);&#xD;
			i++;&#xD;
		}&#xD;
		&#xD;
		return wb;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhQcY9xYEeyZO8IXFiGgsA" name="areBallotsSet" specification="_zNnusNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhQcZNxYEeyZO8IXFiGgsA" name="strict">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhQcZdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if(strict) {&#xD;
			return emptyBallots != null &amp;&amp; writtenBallots != null;&#xD;
		}&#xD;
		&#xD;
		return emptyBallots != null || writtenBallots != null;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhRDcNxYEeyZO8IXFiGgsA" name="getBallotsMaxPreferences" specification="_zNoVwNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhRDcdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhRDctxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>if(writtenBallots == null) {&#xD;
			return null;&#xD;
		}&#xD;
		&#xD;
		int[] maxPreferences = new int[writtenBallots.size()];&#xD;
		for (int i=0; i &lt; writtenBallots.size(); i++)&#xD;
			maxPreferences[i] = writtenBallots.get(i).getMaxPreferences();&#xD;
		&#xD;
		return maxPreferences;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhRDc9xYEeyZO8IXFiGgsA" name="setAccountantPublicKey" specification="_zNpj4NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhRDdNxYEeyZO8IXFiGgsA" name="pubKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhRDddxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>accountantPubKey = pubKey;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhRDdtxYEeyZO8IXFiGgsA" name="getAccountantPublicKey" specification="_zNqK8NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhRDd9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zhRDeNxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return accountantPubKey;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhRqgNxYEeyZO8IXFiGgsA" name="getSimulateOffline" specification="_zNqyAdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhRqgdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return simulateOffline;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhRqgtxYEeyZO8IXFiGgsA" name="setSimulateOffline" specification="_zNrZENxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhRqg9xYEeyZO8IXFiGgsA" name="simulateOffline">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.simulateOffline = simulateOffline;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhSRkNxYEeyZO8IXFiGgsA" name="getLastWrongBadge" specification="_zNsAINxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhSRkdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return lastWrongBadge;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhSRktxYEeyZO8IXFiGgsA" name="setLastWrongBadge" specification="_zNsnMNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhSRk9xYEeyZO8IXFiGgsA" name="lastWrongBadge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>this.lastWrongBadge = lastWrongBadge;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zNdWoNxYEeyZO8IXFiGgsA" name="resetInfo" method="_zhNZENxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNd9sNxYEeyZO8IXFiGgsA" name="getStationPort" method="_zhNZEdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNekwNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNfL0NxYEeyZO8IXFiGgsA" name="getBadge" method="_zhOAINxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNfy4NxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNfy4dxYEeyZO8IXFiGgsA" name="setBadgeID" method="_zhOAItxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNgZ8NxYEeyZO8IXFiGgsA" name="badgeID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNgZ8dxYEeyZO8IXFiGgsA" name="getNumConnections" method="_zhOAJNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNhBANxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNhBAdxYEeyZO8IXFiGgsA" name="setBallots" method="_zhOnMNxYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZwNxYEeyZO8IXFiGgsA">
              <body>Funzione richiamata quando un nuovo votante è assegnato alla postazione.&#xD;
	 * I codici delle schede vengono adoperati per selezionare tra le schede della procedura di voto, quelle da mostrare al votante.&#xD;
	 * @param codes Lista di codici delle schede da mostrare.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNhBAtxYEeyZO8IXFiGgsA" name="codes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNhoENxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNiPINxYEeyZO8IXFiGgsA" name="validCandidate" method="_zhOnM9xYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZwdxYEeyZO8IXFiGgsA">
              <body>Funzione che verifica se una data combinazione numero scheda/nome lista/ID candidato esiste per la procedura attuale.&#xD;
	 * @param ballotNum 	Posizione della scheda (relativamete a quelle mostrate al votante) da controllare.&#xD;
	 * @param listName 		Nome della lista con la quale il candidato si sta portando per la scheda scelta.&#xD;
	 * @param candidateID	ID del candidato.&#xD;
	 * @return				Se la combinazione scheda/lista/candidato esiste realmente o meno.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNiPIdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNi2MNxYEeyZO8IXFiGgsA" name="listName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNi2MdxYEeyZO8IXFiGgsA" name="candidateID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNi2MtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNjdQNxYEeyZO8IXFiGgsA" name="validOption" method="_zhPOQNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZwtxYEeyZO8IXFiGgsA">
              <body>Verifica se una data opzione è effettivamente presente nella scheda selezionata.&#xD;
	 * @param ballotNum			Posizione della scheda (relativamete a quelle mostrate al votante) da controllare.&#xD;
	 * @param selectedOption	Opzione per la quale si vuole verificare la presenza.&#xD;
	 * @return					Se l'opzione è realmente presente nella scheda o meno.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNjdQdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNjdQtxYEeyZO8IXFiGgsA" name="selectedOption">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNjdQ9xYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNkEUNxYEeyZO8IXFiGgsA" name="setPreference" method="_zhPORNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZw9xYEeyZO8IXFiGgsA">
              <body>Aggiunge o rimuove una preferenza (candidato o opzione) alla scheda selezionata&#xD;
	 * @param ballotNum		Posizione della scheda (relativamete a quelle mostrate al votante) a cui aggiungere o rimuovere la preferenza.&#xD;
	 * @param preference	Preferenza (candidato o opzione) da aggiungere o rimuovere.&#xD;
	 * @param add			Flag che indica se l'operazione è una aggiunzione (true) o una rimozione (false).&#xD;
	 * @return				L'esito dell'operazione.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNkEUdxYEeyZO8IXFiGgsA" name="ballotNum">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNkEUtxYEeyZO8IXFiGgsA" name="preference">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNkEU9xYEeyZO8IXFiGgsA" name="add">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNkrYNxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNlScNxYEeyZO8IXFiGgsA" name="getEmptyBallots" visibility="private" method="_zhP1U9xYEeyZO8IXFiGgsA" raisedException="_zcDMQdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZxNxYEeyZO8IXFiGgsA">
              <body>Funzione che recupera dall'insieme di tutte le schede di procedura, solo quelle il cui codice appartiene alla lista passata per argomento.&#xD;
	 * @param codes I codici delle schede richieste.&#xD;
	 * @return		Un array contenente le schede richieste.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNlScdxYEeyZO8IXFiGgsA" name="codes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNmgkNxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNlSctxYEeyZO8IXFiGgsA" type="_zdc6cNxYEeyZO8IXFiGgsA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNl5gNxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNmgkdxYEeyZO8IXFiGgsA" name="getWrittenBallotsCopy" method="_zhQcYNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNnHoNxYEeyZO8IXFiGgsA" type="_zdeIkNxYEeyZO8IXFiGgsA" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNnHodxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNnusNxYEeyZO8IXFiGgsA" name="areBallotsSet" method="_zhQcY9xYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNnusdxYEeyZO8IXFiGgsA" name="strict">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zNnustxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNoVwNxYEeyZO8IXFiGgsA" name="getBallotsMaxPreferences" method="_zhRDcNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNoVwdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNoVwtxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNpj4NxYEeyZO8IXFiGgsA" name="setAccountantPublicKey" method="_zhRDc9xYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNpj4dxYEeyZO8IXFiGgsA" name="pubKey">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNpj4txYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNqK8NxYEeyZO8IXFiGgsA" name="getAccountantPublicKey" method="_zhRDdtxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zNqK8dxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zNqK8txYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNqyAdxYEeyZO8IXFiGgsA" name="getSimulateOffline" method="_zhRqgNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhxZxdxYEeyZO8IXFiGgsA">
              <body>@return the simulateOffline</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNqyAtxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNrZENxYEeyZO8IXFiGgsA" name="setSimulateOffline" method="_zhRqgtxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyA0NxYEeyZO8IXFiGgsA">
              <body>@param simulateOffline the simulateOffline to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNrZEdxYEeyZO8IXFiGgsA" name="simulateOffline">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNsAINxYEeyZO8IXFiGgsA" name="getLastWrongBadge" method="_zhSRkNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyA0dxYEeyZO8IXFiGgsA">
              <body>@return the lastWrongBadge</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNsAIdxYEeyZO8IXFiGgsA" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zNsnMNxYEeyZO8IXFiGgsA" name="setLastWrongBadge" method="_zhSRktxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhyA0txYEeyZO8IXFiGgsA">
              <body>@param lastWrongBadge the lastWrongBadge to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_zNsnMdxYEeyZO8IXFiGgsA" name="lastWrongBadge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zfAZoNxYEeyZO8IXFiGgsA" name="Post" method="_zhMyAdxYEeyZO8IXFiGgsA">
            <eAnnotations xmi:id="_zfBAtNxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_zfBAtdxYEeyZO8IXFiGgsA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_zfBAsNxYEeyZO8IXFiGgsA" name="urnIp" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zfBAsdxYEeyZO8IXFiGgsA" name="urnPort">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zfBAstxYEeyZO8IXFiGgsA" name="stationPort">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zfBAs9xYEeyZO8IXFiGgsA" name="numConnections">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zfBAttxYEeyZO8IXFiGgsA" type="_zNa6YNxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zfCO0NxYEeyZO8IXFiGgsA" name="setProcedureBallots" method="_zhP1UNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zfCO0dxYEeyZO8IXFiGgsA" name="ballots" type="_zdc6cNxYEeyZO8IXFiGgsA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zfC14NxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zia6AdxYEeyZO8IXFiGgsA" name="" memberEnd="_zia6AtxYEeyZO8IXFiGgsA _zgKQMNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zia6AtxYEeyZO8IXFiGgsA" name="" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_zia6AdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zicIIdxYEeyZO8IXFiGgsA" name="" memberEnd="_zicIItxYEeyZO8IXFiGgsA _zgSMANxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zicIItxYEeyZO8IXFiGgsA" name="" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_zicIIdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zidWQNxYEeyZO8IXFiGgsA" name="" memberEnd="_zidWQdxYEeyZO8IXFiGgsA _zgUoQdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zidWQdxYEeyZO8IXFiGgsA" name="" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_zidWQNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zid9UdxYEeyZO8IXFiGgsA" name="" memberEnd="_zid9UtxYEeyZO8IXFiGgsA _zgV2YNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zid9UtxYEeyZO8IXFiGgsA" name="" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_zid9UdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIewANxYEeyZO8IXFiGgsA" name="view">
        <packagedElement xmi:type="uml:Package" xmi:id="_zI5mwNxYEeyZO8IXFiGgsA" name="viewmodel">
          <packagedElement xmi:type="uml:Class" xmi:id="_zL7soNxYEeyZO8IXFiGgsA" name="OptionCallBack">
            <ownedAttribute xmi:id="_zfY0INxYEeyZO8IXFiGgsA" name="mainScene" visibility="private" isLeaf="true" type="_zNDuANxYEeyZO8IXFiGgsA" isReadOnly="true" association="_ziDtoNxYEeyZO8IXFiGgsA"/>
            <interfaceRealization xmi:id="_zefcQNxYEeyZO8IXFiGgsA" client="_zL7soNxYEeyZO8IXFiGgsA" supplier="_zcZKgdxYEeyZO8IXFiGgsA" contract="_zcZKgdxYEeyZO8IXFiGgsA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg7FMNxYEeyZO8IXFiGgsA" name="OptionCallBack" specification="_zcdb8NxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zg7FMdxYEeyZO8IXFiGgsA" name="scene" type="_zNDuANxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zg7FMtxYEeyZO8IXFiGgsA" type="_zL7soNxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.mainScene = scene;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg7FM9xYEeyZO8IXFiGgsA" name="call" specification="_zcgfQNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zg7FNNxYEeyZO8IXFiGgsA" name="param" type="_zceDAdxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zg7FNdxYEeyZO8IXFiGgsA" type="_zcU5EdxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>OptionViewModel option = param.getValue();&#xD;
     CheckBox checkBox = new CheckBox();&#xD;
     if(option != null) {&#xD;
         checkBox.selectedProperty().setValue(option.isSelected());&#xD;
         checkBox.selectedProperty().addListener((ov, old_val, new_val) -> mainScene.selectOption(option));&#xD;
     }&#xD;
     else{&#xD;
         ViewAbstrController.showElement(checkBox, false);&#xD;
     }&#xD;
     return new SimpleObjectProperty&lt;>(checkBox);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zcdb8NxYEeyZO8IXFiGgsA" name="OptionCallBack" method="_zg7FMNxYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zcdb8txYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zcdb89xYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zcdb8dxYEeyZO8IXFiGgsA" name="scene" type="_zNDuANxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zceDANxYEeyZO8IXFiGgsA" type="_zL7soNxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zcgfQNxYEeyZO8IXFiGgsA" name="call" method="_zg7FM9xYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zcgfQdxYEeyZO8IXFiGgsA" name="param" type="_zceDAdxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zehRcNxYEeyZO8IXFiGgsA" type="_zcU5EdxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zMVVQNxYEeyZO8IXFiGgsA" name="CandidateCallBack">
            <ownedAttribute xmi:id="_zfapUdxYEeyZO8IXFiGgsA" name="mainScene" visibility="private" isLeaf="true" type="_zNDuANxYEeyZO8IXFiGgsA" isReadOnly="true" association="_ziGJ4dxYEeyZO8IXFiGgsA"/>
            <interfaceRealization xmi:id="_zemxANxYEeyZO8IXFiGgsA" client="_zMVVQNxYEeyZO8IXFiGgsA" supplier="_zcZKgdxYEeyZO8IXFiGgsA" contract="_zcZKgdxYEeyZO8IXFiGgsA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg-IgdxYEeyZO8IXFiGgsA" name="CandidateCallBack" specification="_zcxlANxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zg-vkNxYEeyZO8IXFiGgsA" name="scene" type="_zNDuANxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zg-vkdxYEeyZO8IXFiGgsA" type="_zMVVQNxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.mainScene = scene;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg-vktxYEeyZO8IXFiGgsA" name="call" specification="_zcyMENxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zg-vk9xYEeyZO8IXFiGgsA" name="param" type="_zceDAdxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zg-vlNxYEeyZO8IXFiGgsA" type="_zcU5EdxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>CandidateViewModel candidate = param.getValue();&#xD;
     CheckBox checkBox = new CheckBox();&#xD;
     if(candidate != null){&#xD;
         checkBox.selectedProperty().setValue(candidate.isSelected());&#xD;
         checkBox.selectedProperty().addListener((ov, old_val, new_val) -> mainScene.selectCandidate(candidate));&#xD;
     }&#xD;
     else{&#xD;
         ViewAbstrController.showElement(checkBox, false);&#xD;
     }&#xD;
     return new SimpleObjectProperty&lt;>(checkBox);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zcxlANxYEeyZO8IXFiGgsA" name="CandidateCallBack" method="_zg-IgdxYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zcxlAtxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zcxlA9xYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zcxlAdxYEeyZO8IXFiGgsA" name="scene" type="_zNDuANxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zcxlBNxYEeyZO8IXFiGgsA" type="_zMVVQNxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zcyMENxYEeyZO8IXFiGgsA" name="call" method="_zg-vktxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zcyMEdxYEeyZO8IXFiGgsA" name="param" type="_zceDAdxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zen_INxYEeyZO8IXFiGgsA" type="_zcU5EdxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zMjXsNxYEeyZO8IXFiGgsA" name="BallotRecapViewModel">
            <ownedAttribute xmi:id="_zfe6wNxYEeyZO8IXFiGgsA" name="ballot" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_ziImIdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zfgv8NxYEeyZO8IXFiGgsA" name="numPrefs" visibility="private" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_zfhXANxYEeyZO8IXFiGgsA" name="maxPrefs" visibility="private" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhBy4NxYEeyZO8IXFiGgsA" name="BallotRecapViewModel" specification="_zMlM4NxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhBy4dxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhBy4txYEeyZO8IXFiGgsA" name="numPrefs">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhBy49xYEeyZO8IXFiGgsA" name="maxPrefs">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhBy5NxYEeyZO8IXFiGgsA" type="_zMjXsNxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.ballot = new SimpleStringProperty(ballot);&#xD;
     this.numPrefs = numPrefs;&#xD;
     this.maxPrefs = maxPrefs;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhBy5dxYEeyZO8IXFiGgsA" name="getPrefString" specification="_zMnCENxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhBy5txYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if(numPrefs == 0)&#xD;
         return &quot;Scheda Bianca&quot;;&#xD;
&#xD;
     return numPrefs + &quot;/&quot; + maxPrefs;&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zMlM4NxYEeyZO8IXFiGgsA" name="BallotRecapViewModel" method="_zhBy4NxYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zMlz8txYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zMlz89xYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zMlM4dxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zMlz8NxYEeyZO8IXFiGgsA" name="numPrefs">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zMlz8dxYEeyZO8IXFiGgsA" name="maxPrefs">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zMmbANxYEeyZO8IXFiGgsA" type="_zMjXsNxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_zMnCENxYEeyZO8IXFiGgsA" name="getPrefString" method="_zhBy5dxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zMnCEdxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zN0jANxYEeyZO8IXFiGgsA" name="CandidateViewModel">
            <ownedAttribute xmi:id="_zgaH0NxYEeyZO8IXFiGgsA" name="ballot" visibility="private" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_zgbV8NxYEeyZO8IXFiGgsA" name="electoralList" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zifLcdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgckEdxYEeyZO8IXFiGgsA" name="firstName" visibility="private" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zifygdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgdyMNxYEeyZO8IXFiGgsA" name="lastName" visibility="private" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zihAodxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgdyMtxYEeyZO8IXFiGgsA" name="ID" visibility="private" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zihnsdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgeZQdxYEeyZO8IXFiGgsA" name="dateOfBirth" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zii10dxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgfnYdxYEeyZO8IXFiGgsA" name="selected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUGwNxYEeyZO8IXFiGgsA" name="CandidateViewModel" specification="_zfGgQNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUGwdxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhUGwtxYEeyZO8IXFiGgsA" name="list">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhUGw9xYEeyZO8IXFiGgsA" name="candidate" type="_zddhgNxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zhUGxNxYEeyZO8IXFiGgsA" name="selected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhUGxdxYEeyZO8IXFiGgsA" type="_zN0jANxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.ballot = ballot;&#xD;
&#xD;
     if(list == null)&#xD;
         list = &quot;Nessuna lista&quot;;&#xD;
&#xD;
     this.electoralList = new SimpleStringProperty(list) ;&#xD;
     this.firstName = new SimpleStringProperty(candidate.getFirstName());&#xD;
     this.lastName = new SimpleStringProperty(candidate.getLastName());&#xD;
     this.ID = new SimpleStringProperty(candidate.getID());&#xD;
&#xD;
     String dateOfBirth = candidate.getBirth();&#xD;
     if(dateOfBirth == null)&#xD;
         dateOfBirth = &quot;---&quot;;&#xD;
     this.dateOfBirth = new SimpleStringProperty(dateOfBirth);&#xD;
&#xD;
     this.selected = selected;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUGxtxYEeyZO8IXFiGgsA" name="getBallot" specification="_zN2YMNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUGx9xYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return ballot;&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUGyNxYEeyZO8IXFiGgsA" name="getFirstName" specification="_zN3mUNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUGydxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return firstName.get();&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUt0NxYEeyZO8IXFiGgsA" name="setFirstName" specification="_zN4NYNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUt0dxYEeyZO8IXFiGgsA" name="fName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>firstName.set(fName);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUt0txYEeyZO8IXFiGgsA" name="getLastName" specification="_zN40cNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUt09xYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return lastName.get();&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhUt1NxYEeyZO8IXFiGgsA" name="setLastName" specification="_zN5bgNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhUt1dxYEeyZO8IXFiGgsA" name="fName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>lastName.set(fName);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhVU4NxYEeyZO8IXFiGgsA" name="getID" specification="_zN6CkNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhVU4dxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return ID.get();&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zN2YMNxYEeyZO8IXFiGgsA" name="getBallot" method="_zhUGxtxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN2_QNxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zN3mUNxYEeyZO8IXFiGgsA" name="getFirstName" method="_zhUGyNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN3mUdxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zN4NYNxYEeyZO8IXFiGgsA" name="setFirstName" method="_zhUt0NxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN4NYdxYEeyZO8IXFiGgsA" name="fName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zN40cNxYEeyZO8IXFiGgsA" name="getLastName" method="_zhUt0txYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN40cdxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zN5bgNxYEeyZO8IXFiGgsA" name="setLastName" method="_zhUt1NxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN5bgdxYEeyZO8IXFiGgsA" name="fName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zN6CkNxYEeyZO8IXFiGgsA" name="getID" method="_zhVU4NxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zN6CkdxYEeyZO8IXFiGgsA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_zfGgQNxYEeyZO8IXFiGgsA" name="CandidateViewModel" method="_zhUGwNxYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zfHHUtxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zfHHU9xYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zfGgQdxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zfGgQtxYEeyZO8IXFiGgsA" name="list">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zfHHUNxYEeyZO8IXFiGgsA" name="candidate" type="_zddhgNxYEeyZO8IXFiGgsA"/>
              <ownedParameter xmi:id="_zfHHUdxYEeyZO8IXFiGgsA" name="selected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zfHHVNxYEeyZO8IXFiGgsA" type="_zN0jANxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zOeDQNxYEeyZO8IXFiGgsA" name="OptionViewModel">
            <ownedAttribute xmi:id="_zgj40NxYEeyZO8IXFiGgsA" name="option" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zilSEdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zglG8NxYEeyZO8IXFiGgsA" name="selected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhdQstxYEeyZO8IXFiGgsA" name="OptionViewModel" specification="_zOf4cNxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhdQs9xYEeyZO8IXFiGgsA" name="option">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhdQtNxYEeyZO8IXFiGgsA" name="selected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhdQtdxYEeyZO8IXFiGgsA" type="_zOeDQNxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.option = new SimpleStringProperty(option);&#xD;
     this.selected = selected;&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zOf4cNxYEeyZO8IXFiGgsA" name="OptionViewModel" method="_zhdQstxYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zOgfgtxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zOgfg9xYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zOgfgNxYEeyZO8IXFiGgsA" name="option">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zOgfgdxYEeyZO8IXFiGgsA" name="selected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zOhGkNxYEeyZO8IXFiGgsA" type="_zOeDQNxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zOi7wNxYEeyZO8IXFiGgsA" name="VoteRecapViewModel">
            <ownedAttribute xmi:id="_zgluANxYEeyZO8IXFiGgsA" name="ballot" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zimgMNxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgm8INxYEeyZO8IXFiGgsA" name="list" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zinHQdxYEeyZO8IXFiGgsA"/>
            <ownedAttribute xmi:id="_zgoKQNxYEeyZO8IXFiGgsA" name="preference" isLeaf="true" type="_zc_ncNxYEeyZO8IXFiGgsA" isReadOnly="true" association="_zioVYNxYEeyZO8IXFiGgsA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhee09xYEeyZO8IXFiGgsA" name="VoteRecapViewModel" specification="_zOlYANxYEeyZO8IXFiGgsA">
              <ownedParameter xmi:id="_zhee1NxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhee1dxYEeyZO8IXFiGgsA" name="list">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhee1txYEeyZO8IXFiGgsA" name="preference">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zhee19xYEeyZO8IXFiGgsA" type="_zOi7wNxYEeyZO8IXFiGgsA" direction="return"/>
              <language>java</language>
              <body>this.ballot = new SimpleStringProperty(ballot);&#xD;
     this.list = new SimpleStringProperty(list);&#xD;
     this.preference = new SimpleStringProperty(preference);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_zOlYANxYEeyZO8IXFiGgsA" name="VoteRecapViewModel" method="_zhee09xYEeyZO8IXFiGgsA">
              <eAnnotations xmi:id="_zOl_ENxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_zOl_EdxYEeyZO8IXFiGgsA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_zOlYAdxYEeyZO8IXFiGgsA" name="ballot">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zOlYAtxYEeyZO8IXFiGgsA" name="list">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zOlYA9xYEeyZO8IXFiGgsA" name="preference">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_zOl_EtxYEeyZO8IXFiGgsA" type="_zOi7wNxYEeyZO8IXFiGgsA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_ziDtoNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziDtodxYEeyZO8IXFiGgsA _zfY0INxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_ziDtodxYEeyZO8IXFiGgsA" name="" type="_zL7soNxYEeyZO8IXFiGgsA" association="_ziDtoNxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_ziGJ4dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziGJ4txYEeyZO8IXFiGgsA _zfapUdxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_ziGJ4txYEeyZO8IXFiGgsA" name="" type="_zMVVQNxYEeyZO8IXFiGgsA" association="_ziGJ4dxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_ziImIdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziImItxYEeyZO8IXFiGgsA _zfe6wNxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_ziImItxYEeyZO8IXFiGgsA" name="" type="_zMjXsNxYEeyZO8IXFiGgsA" association="_ziImIdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zifLcdxYEeyZO8IXFiGgsA" name="" memberEnd="_zifLctxYEeyZO8IXFiGgsA _zgbV8NxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zifLctxYEeyZO8IXFiGgsA" name="" type="_zN0jANxYEeyZO8IXFiGgsA" association="_zifLcdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zifygdxYEeyZO8IXFiGgsA" name="" memberEnd="_zifygtxYEeyZO8IXFiGgsA _zgckEdxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zifygtxYEeyZO8IXFiGgsA" name="" type="_zN0jANxYEeyZO8IXFiGgsA" association="_zifygdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zihAodxYEeyZO8IXFiGgsA" name="" memberEnd="_zihAotxYEeyZO8IXFiGgsA _zgdyMNxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zihAotxYEeyZO8IXFiGgsA" name="" type="_zN0jANxYEeyZO8IXFiGgsA" association="_zihAodxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zihnsdxYEeyZO8IXFiGgsA" name="" memberEnd="_zihnstxYEeyZO8IXFiGgsA _zgdyMtxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zihnstxYEeyZO8IXFiGgsA" name="" type="_zN0jANxYEeyZO8IXFiGgsA" association="_zihnsdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zii10dxYEeyZO8IXFiGgsA" name="" memberEnd="_zii10txYEeyZO8IXFiGgsA _zgeZQdxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zii10txYEeyZO8IXFiGgsA" name="" type="_zN0jANxYEeyZO8IXFiGgsA" association="_zii10dxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zilSEdxYEeyZO8IXFiGgsA" name="" memberEnd="_zilSEtxYEeyZO8IXFiGgsA _zgj40NxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zilSEtxYEeyZO8IXFiGgsA" name="" type="_zOeDQNxYEeyZO8IXFiGgsA" association="_zilSEdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zimgMNxYEeyZO8IXFiGgsA" name="" memberEnd="_zimgMdxYEeyZO8IXFiGgsA _zgluANxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zimgMdxYEeyZO8IXFiGgsA" name="" type="_zOi7wNxYEeyZO8IXFiGgsA" association="_zimgMNxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zinHQdxYEeyZO8IXFiGgsA" name="" memberEnd="_zinHQtxYEeyZO8IXFiGgsA _zgm8INxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zinHQtxYEeyZO8IXFiGgsA" name="" type="_zOi7wNxYEeyZO8IXFiGgsA" association="_zinHQdxYEeyZO8IXFiGgsA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_zioVYNxYEeyZO8IXFiGgsA" name="" memberEnd="_zioVYdxYEeyZO8IXFiGgsA _zgoKQNxYEeyZO8IXFiGgsA">
            <ownedEnd xmi:id="_zioVYdxYEeyZO8IXFiGgsA" name="" type="_zOi7wNxYEeyZO8IXFiGgsA" association="_zioVYNxYEeyZO8IXFiGgsA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zMa00NxYEeyZO8IXFiGgsA" name="Activation">
          <generalization xmi:id="_zesQkdxYEeyZO8IXFiGgsA" general="_zcbmwNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfbQYdxYEeyZO8IXFiGgsA" name="sessKeyField" visibility="private" type="_zc7WANxYEeyZO8IXFiGgsA" association="_ziGw8dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfcegNxYEeyZO8IXFiGgsA" name="sessKeyBtn" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziHYAdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfdsoNxYEeyZO8IXFiGgsA" name="welcomeLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziH_EdxYEeyZO8IXFiGgsA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg_WoNxYEeyZO8IXFiGgsA" name="initialize" specification="_zMcqANxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>sessKeyField.setTextFormatter(new TextFormatter&lt;>((change) -> {&#xD;
 		String editedText = change.getText().toUpperCase().replaceAll(&quot;[^a-zA-Z0-9]&quot;, &quot;&quot;);&#xD;
 	    change.setText(editedText);&#xD;
 	    return change;&#xD;
 	}));&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg_WodxYEeyZO8IXFiGgsA" name="checkKey" specification="_zepNQNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg_WotxYEeyZO8IXFiGgsA" name="event" type="_zc9LMdxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>if (event.getCode().equals(KeyCode.ENTER))&#xD;
         checkSessionKey(null);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg_9sNxYEeyZO8IXFiGgsA" name="checkSessionKey" specification="_zerCcNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg_9sdxYEeyZO8IXFiGgsA" name="event" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>String sessKey = sessKeyField.getText();&#xD;
     ((Controller) controller).activate(sessKey);&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zMcqANxYEeyZO8IXFiGgsA" name="initialize" visibility="private" method="_zg_WoNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zepNQNxYEeyZO8IXFiGgsA" name="checkKey" visibility="private" method="_zg_WodxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zepNQdxYEeyZO8IXFiGgsA" name="event" type="_zc9LMdxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zerCcNxYEeyZO8IXFiGgsA" name="checkSessionKey" visibility="private" method="_zg_9sNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zerCcdxYEeyZO8IXFiGgsA" name="event" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zMo3QNxYEeyZO8IXFiGgsA" name="ShowMessage">
          <generalization xmi:id="_zexJEtxYEeyZO8IXFiGgsA" general="_zcbmwNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfh-ENxYEeyZO8IXFiGgsA" name="txtRFID" visibility="private" type="_zc7WANxYEeyZO8IXFiGgsA" association="_ziJNMdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfjMMdxYEeyZO8IXFiGgsA" name="lblID" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziKbUdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zflocNxYEeyZO8IXFiGgsA" name="splitPane" visibility="private" type="_zdFHANxYEeyZO8IXFiGgsA" association="_ziLCYdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfmPgtxYEeyZO8IXFiGgsA" name="leftLabelPane" visibility="private" type="_zdIKUNxYEeyZO8IXFiGgsA" association="_ziLpcdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfndotxYEeyZO8IXFiGgsA" name="imgView" visibility="private" type="_zdG8MdxYEeyZO8IXFiGgsA" association="_ziMQgdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zforwNxYEeyZO8IXFiGgsA" name="resendVotesBtn" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziM3kdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfpS0dxYEeyZO8IXFiGgsA" name="badgeStatusHBox" visibility="private" type="_zdJYcNxYEeyZO8IXFiGgsA" association="_ziNeodxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhj-YNxYEeyZO8IXFiGgsA" name="lblState" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_zio8cNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhklcNxYEeyZO8IXFiGgsA" name="lblMessage" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_zipjgNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhlMgNxYEeyZO8IXFiGgsA" name="rfidStatusLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziqKkNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhlMg9xYEeyZO8IXFiGgsA" name="reqBadgeLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziqxoNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhlzktxYEeyZO8IXFiGgsA" name="lastBadgeLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_zirYsNxYEeyZO8IXFiGgsA"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhDBANxYEeyZO8IXFiGgsA" name="initialize" specification="_zMr6kNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>leftLabelPane.maxWidthProperty().bind(splitPane.widthProperty().multiply(0.55));&#xD;
 	leftLabelPane.minWidthProperty().bind(splitPane.widthProperty().multiply(0.55));&#xD;
 	&#xD;
 	//Gestione della textfield per la lettura RFID: visibile solo se devMode = true&#xD;
     showElement(txtRFID, Constants.devMode &amp;&amp; !Constants.postRfid);&#xD;
     showElement(rfidStatusLabel, false);&#xD;
     showElement(badgeStatusHBox, false);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhDBAdxYEeyZO8IXFiGgsA" name="setInfos" specification="_zMtIsNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhDBAtxYEeyZO8IXFiGgsA" name="state">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhDBA9xYEeyZO8IXFiGgsA" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhDBBNxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhDBBdxYEeyZO8IXFiGgsA" name="image">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhDBBtxYEeyZO8IXFiGgsA" name="resendVotes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>lblID.setText(FileUtils.getResourceBundle(&quot;etiqueta_puesto&quot;));&#xD;
     lblState.setText(state);&#xD;
     lblMessage.setText(message);&#xD;
     &#xD;
     showElement(resendVotesBtn, resendVotes);&#xD;
     showElement(imgView, image != null);&#xD;
     &#xD;
     if(state.equals(&quot;Associata&quot;)) {&#xD;
     	showElement(rfidStatusLabel, true);&#xD;
         showElement(badgeStatusHBox, true);&#xD;
     	reqBadgeLabel.setText(badge);&#xD;
     }&#xD;
     &#xD;
     if(image == null)&#xD;
     	return;&#xD;
     &#xD;
     switch(image) {&#xD;
     	case &quot;error.png&quot;:&#xD;
     		imgView.setFitHeight(150);&#xD;
     		imgView.setFitWidth(150);&#xD;
     		&#xD;
//        	case &quot;rfid.png&quot;:&#xD;
//        		showImg(image);&#xD;
//        		break;&#xD;
     		&#xD;
 		default:&#xD;
 			System.err.println(&quot;Immagine non riconosciuta.&quot;);&#xD;
     }&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhDoENxYEeyZO8IXFiGgsA" name="setRfidReachable" specification="_zMu94NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhDoEdxYEeyZO8IXFiGgsA" name="reachable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>rfidStatusLabel.setText(&quot;Stato Lettore RFID: &quot; + (reachable ? &quot;Connesso&quot; : &quot;Non Raggiungibile&quot;));&#xD;
 	rfidStatusLabel.setStyle(&quot;-fx-background-color: &quot; + (reachable ? &quot;#a8f582;&quot; : &quot;#eb9a21;&quot;));&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhDoEtxYEeyZO8IXFiGgsA" name="updateLastWrongBadge" specification="_zMvk8NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhEPINxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if(badge != null) {&#xD;
 		badgeStatusHBox.setStyle(&quot;-fx-background-color: #ffd659;&quot;);&#xD;
 		lastBadgeLabel.setText(badge);&#xD;
 	}&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhEPIdxYEeyZO8IXFiGgsA" name="resendVotes" specification="_zeus0NxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhEPItxYEeyZO8IXFiGgsA" name="event" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>((Controller) controller).resendVotes();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhEPI9xYEeyZO8IXFiGgsA" name="readRFID" specification="_zev68dxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhEPJNxYEeyZO8IXFiGgsA" name="actionEvent" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>CardReader reader = ((Controller) controller).getCardReader();&#xD;
     reader.write(txtRFID.getText());&#xD;
     reader.endWrite();&#xD;
     txtRFID.clear();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhE2MNxYEeyZO8IXFiGgsA" name="showImg" specification="_zMwzENxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhE2MdxYEeyZO8IXFiGgsA" name="imgName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
 		FileInputStream inputstream = new FileInputStream(&quot;src/main/resources/img/&quot;+imgName);&#xD;
	    	Image image = new Image(inputstream); &#xD;
	    	imgView.setImage(image);&#xD;
		} &#xD;
		catch (Exception e) { &#xD;
			e.printStackTrace(); &#xD;
		}&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zMr6kNxYEeyZO8IXFiGgsA" name="initialize" method="_zhDBANxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zMtIsNxYEeyZO8IXFiGgsA" name="setInfos" method="_zhDBAdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zMtvwNxYEeyZO8IXFiGgsA" name="state">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zMtvwdxYEeyZO8IXFiGgsA" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zMtvwtxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zMtvw9xYEeyZO8IXFiGgsA" name="image">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zMuW0NxYEeyZO8IXFiGgsA" name="resendVotes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zMu94NxYEeyZO8IXFiGgsA" name="setRfidReachable" method="_zhDoENxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zMu94dxYEeyZO8IXFiGgsA" name="reachable">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zMvk8NxYEeyZO8IXFiGgsA" name="updateLastWrongBadge" method="_zhDoEtxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zMwMANxYEeyZO8IXFiGgsA" name="badge">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zMwzENxYEeyZO8IXFiGgsA" name="showImg" visibility="private" method="_zhE2MNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhnBsNxYEeyZO8IXFiGgsA">
              <body>Funzione che carica un'immagine da file system e, se riesce a trovarla, la mostra all'interno dell'ImageView presente nella scena.&#xD;
     * @param imgName Nome ed estensione del file, da cercare all'interno di src/main/resources/img</body>
            </ownedComment>
            <ownedParameter xmi:id="_zMxaINxYEeyZO8IXFiGgsA" name="imgName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zeus0NxYEeyZO8IXFiGgsA" name="resendVotes" visibility="private" method="_zhEPIdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zeus0dxYEeyZO8IXFiGgsA" name="event" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zev68dxYEeyZO8IXFiGgsA" name="readRFID" visibility="private" method="_zhEPI9xYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zev68txYEeyZO8IXFiGgsA" name="actionEvent" type="_zc4SsNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zM59ANxYEeyZO8IXFiGgsA" name="View">
          <generalization xmi:id="_zezlUdxYEeyZO8IXFiGgsA" general="_zdRUQNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfqg8NxYEeyZO8IXFiGgsA" name="post" visibility="private" type="_zNa6YNxYEeyZO8IXFiGgsA" association="_ziOFsdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfrIAdxYEeyZO8IXFiGgsA" name="currScene" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zfrvENxYEeyZO8IXFiGgsA" value="&quot;&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zfrvEtxYEeyZO8IXFiGgsA" name="currViewController" visibility="private" type="_zcbmwNxYEeyZO8IXFiGgsA" association="_ziOswNxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zfrvE9xYEeyZO8IXFiGgsA" value="null"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhFdQNxYEeyZO8IXFiGgsA" name="View" specification="_zeyXMNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhFdQdxYEeyZO8IXFiGgsA" name="stage" type="_zcHdsNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhFdQtxYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhFdQ9xYEeyZO8IXFiGgsA" type="_zM59ANxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>super(stage);&#xD;
		this.post = post;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhGEUNxYEeyZO8IXFiGgsA" name="getResourceURL" specification="_zM8ZQNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhGEUdxYEeyZO8IXFiGgsA" name="file">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhGEUtxYEeyZO8IXFiGgsA" type="_zdQGINxYEeyZO8IXFiGgsA" direction="return"/>
            <language>java</language>
            <body>return getClass().getResource(&quot;/fxml/&quot; + file + &quot;.fxml&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhGEU9xYEeyZO8IXFiGgsA" name="updateFromView" specification="_zM-OcNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>StatePost state = post.getState();&#xD;
&#xD;
		switch (state) {&#xD;
		case NON_ATTIVA:&#xD;
			if (!currScene.equals(&quot;activation&quot;)) {&#xD;
				currScene = &quot;activation&quot;;&#xD;
				loadScene(getResourceURL(&quot;activation&quot;), mainController);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case ATTIVA:&#xD;
			if (!currScene.equals(&quot;show-msg-attiva&quot;)) {&#xD;
				currScene = &quot;show-msg-attiva&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(FileUtils.getResourceBundle(&quot;etiqueta_activa&quot;),&#xD;
						FileUtils.getResourceBundle(&quot;etiqueta_puesto_listo&quot;), null, null, false);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case ASSOCIATA:&#xD;
			if (!currScene.equals(&quot;show-msg-associata&quot;)) {&#xD;
				currScene = &quot;show-msg-associata&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(FileUtils.getResourceBundle(&quot;etiqueta_asociada&quot;),&#xD;
						FileUtils.getResourceBundle(&quot;etiqueta_introduce_codigo&quot;), post.getBadge(), null, &#xD;
						false);&#xD;
			} else if (Constants.postRfid) {&#xD;
				((ShowMessage) currViewController).setRfidReachable(post.isRfidReaderReachable());&#xD;
				((ShowMessage) currViewController).updateLastWrongBadge(post.getLastWrongBadge());&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case IN_USO:&#xD;
			if (!currScene.equals(&quot;main-scene&quot;)) {&#xD;
				currScene = &quot;main-scene&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;main-scene&quot;), mainController);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case VOTO_PENDING:&#xD;
			if (!currScene.equals(&quot;show-msg-pending&quot;)) {&#xD;
				currScene = &quot;show-msg-pending&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(&quot;Errore Invio Voti&quot;,&#xD;
						&quot;Non è stato possibile inviare i voti al seggio. Riprova.&quot;, null, null, true);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case VOTO_INVIATO:&#xD;
			if (!currScene.equals(&quot;show-msg-inviato&quot;)) {&#xD;
				currScene = &quot;show-msg-inviato&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(FileUtils.getResourceBundle(&quot;etiqueta_voto_enviado&quot;),&#xD;
						FileUtils.getResourceBundle(&quot;etiqueta_votacion_finalizada&quot;), null, null,&#xD;
						false);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case DA_RIAVVIARE:&#xD;
			if (!currScene.equals(&quot;show-msg-riavvio&quot;)) {&#xD;
				currScene = &quot;show-msg-riavvio&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(&quot;Da riavviare&quot;,&#xD;
						&quot;Necessario riavvio della postazione. Contattare lo staff.&quot;, null, &quot;error.png&quot;, false);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case DA_RESETTARE:&#xD;
			if (!currScene.equals(&quot;show-msg-reset&quot;)) {&#xD;
				currScene = &quot;show-msg-reset&quot;;&#xD;
				currViewController = loadScene(getResourceURL(&quot;show-message&quot;), mainController);&#xD;
				((ShowMessage) currViewController).setInfos(&quot;Da resettare&quot;,&#xD;
						&quot;Necessario reset o riavvio della postazione. Contattare lo staff.&quot;, null, &quot;error.png&quot;, false);&#xD;
			}&#xD;
			break;&#xD;
&#xD;
		case OFFLINE:&#xD;
			break;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zM8ZQNxYEeyZO8IXFiGgsA" name="getResourceURL" visibility="private" method="_zhGEUNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zM9AUNxYEeyZO8IXFiGgsA" name="file">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zezlUNxYEeyZO8IXFiGgsA" type="_zdQGINxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zM-OcNxYEeyZO8IXFiGgsA" name="updateFromView" method="_zhGEU9xYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zeyXMNxYEeyZO8IXFiGgsA" name="View" method="_zhFdQNxYEeyZO8IXFiGgsA">
            <eAnnotations xmi:id="_zey-QdxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_zey-QtxYEeyZO8IXFiGgsA" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_zeyXMdxYEeyZO8IXFiGgsA" name="stage" type="_zcHdsNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zey-QNxYEeyZO8IXFiGgsA" name="post" type="_zNa6YNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zey-Q9xYEeyZO8IXFiGgsA" type="_zM59ANxYEeyZO8IXFiGgsA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_zNDuANxYEeyZO8IXFiGgsA" name="MainScene">
          <generalization xmi:id="_ze66ENxYEeyZO8IXFiGgsA" general="_zcbmwNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfsWIdxYEeyZO8IXFiGgsA" name="tblCandidates" visibility="private" type="_ze0zcNxYEeyZO8IXFiGgsA" association="_ziOsw9xYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfuLUNxYEeyZO8IXFiGgsA" name="tblOptions" visibility="private" type="_ze0zcNxYEeyZO8IXFiGgsA" association="_ziPT0dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfvZcdxYEeyZO8IXFiGgsA" name="VBoxRecap" visibility="private" type="_zdbFQdxYEeyZO8IXFiGgsA" association="_ziP64dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfwAg9xYEeyZO8IXFiGgsA" name="tblBallotsRecap" visibility="private" type="_ze0zcNxYEeyZO8IXFiGgsA" association="_ziQh8dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfycwdxYEeyZO8IXFiGgsA" name="tblVotesRecap" visibility="private" type="_ze0zcNxYEeyZO8IXFiGgsA" association="_ziRJAdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfzq49xYEeyZO8IXFiGgsA" name="listCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziRwEdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf1gEtxYEeyZO8IXFiGgsA" name="selCandidateCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziS-MNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf3VQNxYEeyZO8IXFiGgsA" name="strOptionCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziTlQdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf4jYNxYEeyZO8IXFiGgsA" name="selOptionCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziUzYdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf5xgNxYEeyZO8IXFiGgsA" name="recapVoteBallotCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziVacdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf8NwNxYEeyZO8IXFiGgsA" name="recapBallotCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziWBgdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf-qANxYEeyZO8IXFiGgsA" name="prefHBox" visibility="private" type="_zdJYcNxYEeyZO8IXFiGgsA" association="_ziWokdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zf_REtxYEeyZO8IXFiGgsA" name="btnStart" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziXPodxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zgBGQdxYEeyZO8IXFiGgsA" name="lblTitle" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziYdwdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zgDigNxYEeyZO8IXFiGgsA" name="numBallots" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgEwoNxYEeyZO8IXFiGgsA" name="emptyBallots" visibility="private" type="_zdc6cNxYEeyZO8IXFiGgsA" association="_ziZE0dxYEeyZO8IXFiGgsA">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zgEwodxYEeyZO8IXFiGgsA" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_zgFXsdxYEeyZO8IXFiGgsA" name="writtenBallots" visibility="private" type="_zdfWsNxYEeyZO8IXFiGgsA" association="_ziaS8NxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhnowNxYEeyZO8IXFiGgsA" name="firstNameCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zir_wNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhoP0dxYEeyZO8IXFiGgsA" name="lastNameCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zism0NxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zho24dxYEeyZO8IXFiGgsA" name="IDCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zitN4NxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhpd8dxYEeyZO8IXFiGgsA" name="dateCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zit08dxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhqsENxYEeyZO8IXFiGgsA" name="recapListCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_ziucAdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhrTIdxYEeyZO8IXFiGgsA" name="recapPrefCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zivDEdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhr6MdxYEeyZO8IXFiGgsA" name="recapBallotPrefCol" visibility="private" type="_zcX8YdxYEeyZO8IXFiGgsA" association="_zivqIdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhshQtxYEeyZO8IXFiGgsA" name="btnPrevious" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziwRMdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhtIUtxYEeyZO8IXFiGgsA" name="btnNext" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziw4QdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhtvYtxYEeyZO8IXFiGgsA" name="btnSend" visibility="private" type="_zc45wdxYEeyZO8IXFiGgsA" association="_ziyGYNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhuWctxYEeyZO8IXFiGgsA" name="lblDescription" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_zizUgdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhu9gdxYEeyZO8IXFiGgsA" name="currPrefLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_ziz7kdxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhu9hNxYEeyZO8IXFiGgsA" name="maxPrefLabel" visibility="private" type="_zc6H4dxYEeyZO8IXFiGgsA" association="_zi0iodxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zhvkktxYEeyZO8IXFiGgsA" name="currentBallot" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zhwLotxYEeyZO8IXFiGgsA" value="0"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhH5gNxYEeyZO8IXFiGgsA" name="initialize" specification="_zNH_cNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>listCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;electoralList&quot;));&#xD;
     firstNameCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;firstName&quot;));&#xD;
     lastNameCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;lastName&quot;));&#xD;
     IDCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;ID&quot;));&#xD;
     dateCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;dateOfBirth&quot;));&#xD;
&#xD;
     selCandidateCol.setCellValueFactory(new CandidateCallBack(this));&#xD;
     &#xD;
     //Tabella opzioni&#xD;
     strOptionCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;option&quot;));&#xD;
     &#xD;
     selOptionCol.setCellValueFactory(new OptionCallBack(this));&#xD;
&#xD;
     //Tabella recap voti&#xD;
     recapVoteBallotCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;ballot&quot;));&#xD;
     recapListCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;list&quot;));&#xD;
     recapPrefCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;preference&quot;));&#xD;
&#xD;
     //Tabella recap scheda&#xD;
     recapBallotCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;ballot&quot;));&#xD;
     recapBallotPrefCol.setCellValueFactory(&#xD;
             new PropertyValueFactory&lt;>(&quot;prefString&quot;));&#xD;
&#xD;
     //Elimino tutti gli elementi in attesa del click dell'utente&#xD;
     showElement(tblCandidates, false);&#xD;
     showElement(tblOptions, false);&#xD;
     showElement(VBoxRecap, false);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhH5gdxYEeyZO8IXFiGgsA" name="start" specification="_zNJNktxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>Post post = ((Controller) controller).getPost();&#xD;
     &#xD;
     if(Constants.devMode &amp;&amp; post.getSimulateOffline()) {&#xD;
     	post.setSimulateOffline(false);&#xD;
     	return;&#xD;
     }&#xD;
&#xD;
     emptyBallots = post.getEmptyBallots();&#xD;
     writtenBallots = post.getWrittenBallots();&#xD;
     numBallots = emptyBallots.length;&#xD;
&#xD;
     lblTitle.setVisible(true);&#xD;
     lblDescription.setVisible(true);&#xD;
&#xD;
     showElement(prefHBox, true);&#xD;
     showElement(btnPrevious, true);&#xD;
     showElement(btnNext, true);&#xD;
     showElement(btnSend, true);&#xD;
     showElement(btnStart, false);&#xD;
&#xD;
     showBallot();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhIgkNxYEeyZO8IXFiGgsA" name="previousBallot" specification="_zNJ0o9xYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>currentBallot--;&#xD;
     showBallot();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhIgkdxYEeyZO8IXFiGgsA" name="nextBallot" specification="_zNLp0dxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>currentBallot++;&#xD;
     if(currentBallot &lt; numBallots)&#xD;
         showBallot();&#xD;
     else&#xD;
         showRecap();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhIgktxYEeyZO8IXFiGgsA" name="sendVote" specification="_zNM38NxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>((Controller) controller).tryVoteSending();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJHoNxYEeyZO8IXFiGgsA" name="selectCandidateFromTableView" specification="_zNNfAtxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>CandidateViewModel candidate = tblCandidates.getSelectionModel().getSelectedItem();&#xD;
 	&#xD;
 	if(candidate == null) {&#xD;
     	tblCandidates.getSelectionModel().clearSelection();&#xD;
     	return;&#xD;
 	}&#xD;
&#xD;
 	selectCandidate(candidate);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJHodxYEeyZO8IXFiGgsA" name="selectOptionFromTableView" specification="_zNOtItxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>OptionViewModel option = tblOptions.getSelectionModel().getSelectedItem();&#xD;
     &#xD;
     if (option == null) {&#xD;
     	tblOptions.getSelectionModel().clearSelection();&#xD;
     	return;&#xD;
     }&#xD;
     &#xD;
     selectOption(option);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJHotxYEeyZO8IXFiGgsA" name="selectCandidate" specification="_zdjBENxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhJHo9xYEeyZO8IXFiGgsA" name="candidate" type="_zN0jANxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>boolean newValue = !candidate.isSelected();&#xD;
     int currPrefs = Integer.parseInt(currPrefLabel.getText());&#xD;
     &#xD;
     if(((Controller) controller).selectCandidate(currentBallot, candidate.getElectoralList(), candidate.getID(), newValue)) {&#xD;
         currPrefLabel.setText(newValue ? String.valueOf(currPrefs+1) : String.valueOf(currPrefs-1));&#xD;
     	candidate.setSelected(newValue);&#xD;
     } &#xD;
     else&#xD;
         candidate.setSelected(!newValue);&#xD;
     &#xD;
     tblCandidates.getSelectionModel().clearSelection();&#xD;
     tblCandidates.refresh();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJHpNxYEeyZO8IXFiGgsA" name="selectOption" specification="_zdjoINxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhJHpdxYEeyZO8IXFiGgsA" name="option" type="_zOeDQNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>boolean newValue = !option.isSelected();&#xD;
     int currPrefs = Integer.parseInt(currPrefLabel.getText());&#xD;
     &#xD;
     if(((Controller) controller).selectOption(currentBallot, option.getOption(), newValue)) {&#xD;
     	currPrefLabel.setText(newValue ? String.valueOf(currPrefs+1) : String.valueOf(currPrefs-1));&#xD;
         option.setSelected(newValue);&#xD;
     }&#xD;
     else&#xD;
     	option.setSelected(!newValue);&#xD;
     &#xD;
     tblOptions.getSelectionModel().clearSelection();&#xD;
     tblOptions.refresh();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJusNxYEeyZO8IXFiGgsA" name="showBallot" specification="_zNQiUNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>int rowLimit = 15;&#xD;
     boolean rowLimitReached = false;&#xD;
     int minRowHeight = 24, maxRowHeight = 50, minFontSize = 14, maxFontSize = 20;&#xD;
     &#xD;
     //Recupera la scheda e setta a 0 il numero di preferenze espresse&#xD;
     EmptyBallot eb = emptyBallots[currentBallot];&#xD;
     WrittenBallot wb = writtenBallots.get(currentBallot);&#xD;
     int prefChosen = 0;&#xD;
&#xD;
     //Scrive titolo e descrizione della scheda su schermo&#xD;
     lblTitle.setText(eb.getTitle());&#xD;
     lblDescription.setText(eb.getDescription());&#xD;
&#xD;
     //Incapsula le informazioni sui candidati in un array di Observable&#xD;
     ObservableList&lt;CandidateViewModel> candidatesData = FXCollections.observableArrayList();&#xD;
     &#xD;
     ArrayList&lt;ElectoralList> electoralLists = eb.getLists();&#xD;
     int numCandidates = 0;&#xD;
     for(ElectoralList list : electoralLists)&#xD;
     	numCandidates += list.getCandidates().size();&#xD;
     &#xD;
     //Incapsula le informazioni sui candidati in un array di Observable&#xD;
     ObservableList&lt;OptionViewModel> optionsData = FXCollections.observableArrayList();&#xD;
     &#xD;
     ArrayList&lt;String> options = eb.getOptions();&#xD;
     int numOpts = options.size();&#xD;
     &#xD;
     if(numCandidates > 0 &amp;&amp; numOpts == 0) {&#xD;
     	rowLimitReached = numCandidates >= rowLimit;&#xD;
     	&#xD;
         for(ElectoralList list : electoralLists)&#xD;
     		for(Person candidate : list.getCandidates()) {&#xD;
     		    //Aggiorna il numero di preferenze espresse per questa scheda&#xD;
     			boolean chosen = wb.chosenCandidate(candidate.getID());&#xD;
     			if(chosen) &#xD;
     				prefChosen++;&#xD;
     			&#xD;
     			//riga reale&#xD;
     			candidatesData.add(new CandidateViewModel(currentBallot, list.getName(), candidate, chosen));&#xD;
     			&#xD;
     			if(!rowLimitReached) {&#xD;
 	    			//riga di padding&#xD;
 	    			candidatesData.add(null);&#xD;
     			}&#xD;
     		}&#xD;
         &#xD;
     	if(!rowLimitReached) {&#xD;
	        	//Rimuoviamo l'ultima riga di padding aggiunta perché inutile&#xD;
	            candidatesData.remove(candidatesData.size() - 1);&#xD;
	&#xD;
	            //Aggiungiamo il listener alla tabella dei candidati per la gestione dinamica delle altezze delle righe&#xD;
	            setRowFactoryListener(tblCandidates, numCandidates, minRowHeight, maxRowHeight, 80, minFontSize, maxFontSize);&#xD;
     	}&#xD;
&#xD;
 		tblCandidates.setItems(candidatesData);&#xD;
     }&#xD;
     else if(numCandidates == 0 &amp;&amp; numOpts > 0) {&#xD;
     	rowLimitReached = numOpts >= rowLimit;&#xD;
     	&#xD;
     	for(String option : eb.getOptions()) {&#xD;
             //Aggiorna il numero di preferenze espresse per questa scheda&#xD;
             boolean chosen = wb.chosenOption(option);&#xD;
 			if(chosen) &#xD;
 				prefChosen++;&#xD;
 			&#xD;
 			//riga reale&#xD;
 			optionsData.add(new OptionViewModel(option, chosen));&#xD;
             &#xD;
 			if(!rowLimitReached) {&#xD;
 				//riga di padding&#xD;
 				optionsData.add(null);&#xD;
 			}&#xD;
 		}&#xD;
&#xD;
         //Se la scheda non presenta candidati la tabella candidati non viene mostrata affatto&#xD;
     	if(!rowLimitReached) {&#xD;
	        	//Rimuoviamo l'ultima riga di padding aggiunta perché inutile&#xD;
	            optionsData.remove(optionsData.size() - 1);&#xD;
	&#xD;
	            //Aggiungiamo il listener alla tabella delle opzioni per la gestione dinamica delle altezze delle righe&#xD;
	            setRowFactoryListener(tblOptions, numOpts, minRowHeight, maxRowHeight, 40, minFontSize, maxFontSize);&#xD;
     	}&#xD;
&#xD;
 		tblOptions.setItems(optionsData);&#xD;
     }&#xD;
     &#xD;
     //Se la scheda non presenta opzioni la tabella opzioni non viene mostrata affatto&#xD;
     showElement(tblOptions, !optionsData.isEmpty());&#xD;
     &#xD;
     //Se la scheda non presenta candidati la tabella candidati non viene mostrata affatto&#xD;
     showElement(tblCandidates, !candidatesData.isEmpty());&#xD;
&#xD;
 	//Mostriamo a schermo il numero di preferenze espresse e di quelle massime&#xD;
 	currPrefLabel.setText(String.valueOf(prefChosen));&#xD;
     maxPrefLabel.setText(String.valueOf(wb.getMaxPreferences()));&#xD;
&#xD;
     //Gestiamo bottoni e label a seconda della scheda corrente&#xD;
     enableAndDisableElements();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhJusdxYEeyZO8IXFiGgsA" name="setRowFactoryListener" specification="_ze32wNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zhJustxYEeyZO8IXFiGgsA" name="table" type="_ze0zcNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_zhJus9xYEeyZO8IXFiGgsA" name="numRows">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhJutNxYEeyZO8IXFiGgsA" name="minRowHeight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhJutdxYEeyZO8IXFiGgsA" name="maxRowHeight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhJuttxYEeyZO8IXFiGgsA" name="margin">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhJut9xYEeyZO8IXFiGgsA" name="minFontSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_zhJuuNxYEeyZO8IXFiGgsA" name="maxFontSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>final InvalidationListener resizeListener = new InvalidationListener() {&#xD;
         @Override&#xD;
         public void invalidated(final Observable observable) {&#xD;
&#xD;
             //Si recupera la dimensione effettiva della tabella&#xD;
             double height = table.getHeight();&#xD;
&#xD;
             //Una parte della dimensione, passata per argomento, viene eliminata dal calcolo allo scopo di&#xD;
             // lavorare solamente alla parte di tabella contenente dati, escludendo lo spazio riservato ai nomi delle colonne&#xD;
             double h = height - margin;&#xD;
&#xD;
             //Lo scopo di questo listener è calcolare questi due parametri e assegnarne uno come altezza della riga,&#xD;
             // a seconda se si tratta di una riga di padding o di una riga valida (contenente dati&#xD;
             int rowHeight, paddingHeight;&#xD;
&#xD;
             //Verifichiamo se l'altezza della tabella è sufficiente ad avere righe reali e di padding con altezza uguale tra di loro e&#xD;
             // maggiore dell'altezza minima passata per argomento&#xD;
             int temp = (int) Math.floor(h / (2 * numRows - 1));&#xD;
             if(temp >= minRowHeight){&#xD;
                 //Se siamo quì vuol dire che abbiamo abbastanza spazio per cui settiamo entrambe le altezze&#xD;
                 // al più piccolo valore tra quella calcolata e quella massima permessa&#xD;
                 rowHeight = Math.min(temp, maxRowHeight);&#xD;
                 paddingHeight = rowHeight;&#xD;
             }&#xD;
             else{&#xD;
                 //Se siamo quì abbiamo poco spazio, settiamo l'altezza delle righe valide al minimo possibile e&#xD;
                 // l'altezza delle righe di padding al più grande valore positivo che ci permetta di non sforare&#xD;
                 // al di fuori della tabella, o a 0 altrimenti.&#xD;
                 rowHeight = minRowHeight;&#xD;
                 paddingHeight = (int) Math.max(Math.floor((h - numRows * rowHeight) / (numRows - 1)), 1);&#xD;
             }&#xD;
&#xD;
             //Adesso non resta che sovrascrivere la rowFactory della tabella con una avente i parametri appena calcolati&#xD;
             table.setRowFactory(row -> new TableRow&lt;>() {&#xD;
                 @Override&#xD;
                 protected void updateItem(ViewModel viewModel, boolean empty) {&#xD;
                     super.updateItem(viewModel, empty);&#xD;
&#xD;
                     //Se la riga è di padding l'oggetto è null e ne settiamo l'altezza a paddingHeight&#xD;
                     if (viewModel == null) {&#xD;
                         setStyle(&quot;-fx-cell-size: &quot; + paddingHeight +&quot;px;&quot;);&#xD;
                         return;&#xD;
                     }&#xD;
&#xD;
                     //La dimensione del font è lineare rispetto alla altezza di una riga&#xD;
                     int fontSize = minFontSize + (maxFontSize - minFontSize) * (rowHeight - minRowHeight) / (maxRowHeight - minRowHeight);&#xD;
                     //Se la riga contiene dati allora settiamo altezza e dimensione font a rowHeight e fontSize&#xD;
                     setStyle(&quot;-fx-cell-size: &quot; + rowHeight +&quot;px; -fx-font-size:&quot; + fontSize + &quot;px;&quot;);&#xD;
                 }&#xD;
             });&#xD;
&#xD;
             //Per evitare che le modifiche effettuate cambino nuovamente la dimensione della tabella&#xD;
             // settiamo l'altezza desiderata a quella di partenza ed effettuiamo immediatamente un refresh&#xD;
             table.setPrefHeight(height);&#xD;
             table.refresh();&#xD;
         }&#xD;
     };&#xD;
     table.widthProperty().addListener(resizeListener);&#xD;
     table.heightProperty().addListener(resizeListener);&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhKVwNxYEeyZO8IXFiGgsA" name="showRecap" specification="_zNRJYNxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>lblTitle.setText(FileUtils.getResourceBundle(&quot;etiqueta_resumen_votaciones&quot;));&#xD;
     lblDescription.setText(FileUtils.getResourceBundle(&quot;etiqueta_comprobar_votaciones&quot;));&#xD;
&#xD;
     //Incapsula le informazioni in array di Observable&#xD;
     ObservableList&lt;BallotRecapViewModel> ballotRecapData = FXCollections.observableArrayList();&#xD;
     ObservableList&lt;VoteRecapViewModel> voteRecapData = FXCollections.observableArrayList();&#xD;
&#xD;
     //Si scorrono le schede e si recuperano le info dei soli candidati/opzioni scelte/i dal votante&#xD;
     int i = 0;&#xD;
     for(WrittenBallot wb : writtenBallots){&#xD;
         EmptyBallot eb = emptyBallots[i];&#xD;
         i++;&#xD;
&#xD;
         int maxPrefs = wb.getMaxPreferences();&#xD;
         int numPrefs = 0;&#xD;
         for(ElectoralList list : eb.getLists()){&#xD;
             for(Person candidate : list.getCandidates()){&#xD;
                 if(wb.chosenCandidate(candidate.getID())){&#xD;
                     String preference = candidate.getFirstName() + &quot; &quot; + candidate.getLastName() + &quot; (&quot; + candidate.getID() + &quot;)&quot;;&#xD;
                     voteRecapData.add(new VoteRecapViewModel(eb.getTitle(), list.getName(), preference));&#xD;
                     numPrefs++;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
&#xD;
         for(String option : eb.getOptions()){&#xD;
             if(wb.chosenOption(option)){&#xD;
                 voteRecapData.add(new VoteRecapViewModel(eb.getTitle(), &quot;---&quot;, &quot;\&quot;&quot; + option + &quot;\&quot;&quot;));&#xD;
                 numPrefs++;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         ballotRecapData.add(new BallotRecapViewModel(eb.getTitle(), numPrefs, maxPrefs));&#xD;
     }&#xD;
&#xD;
     //Per ogni scheda deve essere mostrate numero di preferenze espresse e esprimibili&#xD;
     tblBallotsRecap.setItems(ballotRecapData);&#xD;
     //Ogni candidato e ogni opzione selezionata vengono mostrati come righe della tabella riepilogativa&#xD;
     tblVotesRecap.setItems(voteRecapData);&#xD;
&#xD;
     showElement(tblCandidates, false);&#xD;
     showElement(tblOptions, false);&#xD;
&#xD;
     //Gestiamo bottoni e label&#xD;
     enableAndDisableElements();&#xD;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zhKVwdxYEeyZO8IXFiGgsA" name="enableAndDisableElements" specification="_zNRJYdxYEeyZO8IXFiGgsA">
            <language>java</language>
            <body>btnPrevious.setDisable(currentBallot &lt;= 0);&#xD;
     btnNext.setDisable(currentBallot >= numBallots);&#xD;
     btnSend.setVisible(currentBallot >= numBallots);&#xD;
&#xD;
     prefHBox.setVisible(currentBallot &lt; numBallots);&#xD;
     showElement(VBoxRecap, currentBallot >= numBallots);&#xD;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zNH_cNxYEeyZO8IXFiGgsA" name="initialize" visibility="private" method="_zhH5gNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNJNktxYEeyZO8IXFiGgsA" name="start" visibility="private" method="_zhH5gdxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNJ0o9xYEeyZO8IXFiGgsA" name="previousBallot" visibility="private" method="_zhIgkNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNLp0dxYEeyZO8IXFiGgsA" name="nextBallot" visibility="private" method="_zhIgkdxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNM38NxYEeyZO8IXFiGgsA" name="sendVote" visibility="private" method="_zhIgktxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNNfAtxYEeyZO8IXFiGgsA" name="selectCandidateFromTableView" visibility="private" method="_zhJHoNxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNOtItxYEeyZO8IXFiGgsA" name="selectOptionFromTableView" visibility="private" method="_zhJHodxYEeyZO8IXFiGgsA"/>
          <ownedOperation xmi:id="_zNQiUNxYEeyZO8IXFiGgsA" name="showBallot" visibility="private" method="_zhJusNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhwysNxYEeyZO8IXFiGgsA">
              <body>Recupera e mostra a schermo le informazioni sulla scheda corrente.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zNRJYNxYEeyZO8IXFiGgsA" name="showRecap" visibility="private" method="_zhKVwNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhwysdxYEeyZO8IXFiGgsA">
              <body>Mostra la schermata di recap visualizzata dal votante prima di dare conferma e di inviare definitivamente i voti.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zNRJYdxYEeyZO8IXFiGgsA" name="enableAndDisableElements" visibility="private" method="_zhKVwdxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhwystxYEeyZO8IXFiGgsA">
              <body>Funzione che mostra o nasconde bottoni e label a seconda di quale è la scheda corrente.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_zdjBENxYEeyZO8IXFiGgsA" name="selectCandidate" method="_zhJHotxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhwLo9xYEeyZO8IXFiGgsA">
              <body>Seleziona un candidato indipendentemente dall'origine della richiesta.&#xD;
     * Richiamata sia dal click su tabella che su checkbox.&#xD;
     * @param candidate Il candidato da selezionare.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zdjBEdxYEeyZO8IXFiGgsA" name="candidate" type="_zN0jANxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_zdjoINxYEeyZO8IXFiGgsA" name="selectOption" method="_zhJHpNxYEeyZO8IXFiGgsA">
            <ownedComment xmi:id="_zhwLpNxYEeyZO8IXFiGgsA">
              <body>Seleziona una opzione indipendentemente dall'origine della richiesta.&#xD;
     * Richiamata sia dal click su tabella che su checkbox.&#xD;
     * @param option L'opzione da selezionare.</body>
            </ownedComment>
            <ownedParameter xmi:id="_zdjoIdxYEeyZO8IXFiGgsA" name="option" type="_zOeDQNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
          <ownedOperation xmi:id="_ze32wNxYEeyZO8IXFiGgsA" name="setRowFactoryListener" visibility="private" method="_zhJusdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_ze4d0NxYEeyZO8IXFiGgsA" name="table" type="_ze0zcNxYEeyZO8IXFiGgsA"/>
            <ownedParameter xmi:id="_ze4d0dxYEeyZO8IXFiGgsA" name="numRows">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ze4d0txYEeyZO8IXFiGgsA" name="minRowHeight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ze4d09xYEeyZO8IXFiGgsA" name="maxRowHeight">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ze4d1NxYEeyZO8IXFiGgsA" name="margin">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ze5E4NxYEeyZO8IXFiGgsA" name="minFontSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_ze5E4dxYEeyZO8IXFiGgsA" name="maxFontSize">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziGw8dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziGw8txYEeyZO8IXFiGgsA _zfbQYdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziGw8txYEeyZO8IXFiGgsA" name="" type="_zMa00NxYEeyZO8IXFiGgsA" association="_ziGw8dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziHYAdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziHYAtxYEeyZO8IXFiGgsA _zfcegNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziHYAtxYEeyZO8IXFiGgsA" name="" type="_zMa00NxYEeyZO8IXFiGgsA" association="_ziHYAdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziH_EdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziH_EtxYEeyZO8IXFiGgsA _zfdsoNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziH_EtxYEeyZO8IXFiGgsA" name="" type="_zMa00NxYEeyZO8IXFiGgsA" association="_ziH_EdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziJNMdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziJNMtxYEeyZO8IXFiGgsA _zfh-ENxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziJNMtxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziJNMdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziKbUdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziKbUtxYEeyZO8IXFiGgsA _zfjMMdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziKbUtxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziKbUdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziLCYdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziLCYtxYEeyZO8IXFiGgsA _zflocNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziLCYtxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziLCYdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziLpcdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziLpctxYEeyZO8IXFiGgsA _zfmPgtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziLpctxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziLpcdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziMQgdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziMQgtxYEeyZO8IXFiGgsA _zfndotxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziMQgtxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziMQgdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziM3kdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziM3ktxYEeyZO8IXFiGgsA _zforwNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziM3ktxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziM3kdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziNeodxYEeyZO8IXFiGgsA" name="" memberEnd="_ziNeotxYEeyZO8IXFiGgsA _zfpS0dxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziNeotxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziNeodxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziOFsdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziOFstxYEeyZO8IXFiGgsA _zfqg8NxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziOFstxYEeyZO8IXFiGgsA" name="" type="_zM59ANxYEeyZO8IXFiGgsA" association="_ziOFsdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziOswNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziOswdxYEeyZO8IXFiGgsA _zfrvEtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziOswdxYEeyZO8IXFiGgsA" name="" type="_zM59ANxYEeyZO8IXFiGgsA" association="_ziOswNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziOsw9xYEeyZO8IXFiGgsA" name="" memberEnd="_ziOsxNxYEeyZO8IXFiGgsA _zfsWIdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziOsxNxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziOsw9xYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziPT0dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziPT0txYEeyZO8IXFiGgsA _zfuLUNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziPT0txYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziPT0dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziP64dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziP64txYEeyZO8IXFiGgsA _zfvZcdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziP64txYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziP64dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziQh8dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziQh8txYEeyZO8IXFiGgsA _zfwAg9xYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziQh8txYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziQh8dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziRJAdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziRJAtxYEeyZO8IXFiGgsA _zfycwdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziRJAtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziRJAdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziRwEdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziRwEtxYEeyZO8IXFiGgsA _zfzq49xYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziRwEtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziRwEdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziS-MNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziS-MdxYEeyZO8IXFiGgsA _zf1gEtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziS-MdxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziS-MNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziTlQdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziTlQtxYEeyZO8IXFiGgsA _zf3VQNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziTlQtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziTlQdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziUzYdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziUzYtxYEeyZO8IXFiGgsA _zf4jYNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziUzYtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziUzYdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziVacdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziVactxYEeyZO8IXFiGgsA _zf5xgNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziVactxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziVacdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziWBgdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziWBgtxYEeyZO8IXFiGgsA _zf8NwNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziWBgtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziWBgdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziWokdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziWoktxYEeyZO8IXFiGgsA _zf-qANxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziWoktxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziWokdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziXPodxYEeyZO8IXFiGgsA" name="" memberEnd="_ziXPotxYEeyZO8IXFiGgsA _zf_REtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziXPotxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziXPodxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziYdwdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziYdwtxYEeyZO8IXFiGgsA _zgBGQdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziYdwtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziYdwdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziZE0dxYEeyZO8IXFiGgsA" name="" memberEnd="_ziZE0txYEeyZO8IXFiGgsA _zgEwoNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziZE0txYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziZE0dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziaS8NxYEeyZO8IXFiGgsA" name="" memberEnd="_ziaS8dxYEeyZO8IXFiGgsA _zgFXsdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziaS8dxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziaS8NxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zio8cNxYEeyZO8IXFiGgsA" name="" memberEnd="_zio8cdxYEeyZO8IXFiGgsA _zhj-YNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zio8cdxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_zio8cNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zipjgNxYEeyZO8IXFiGgsA" name="" memberEnd="_zipjgdxYEeyZO8IXFiGgsA _zhklcNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zipjgdxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_zipjgNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziqKkNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziqKkdxYEeyZO8IXFiGgsA _zhlMgNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziqKkdxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziqKkNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziqxoNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziqxodxYEeyZO8IXFiGgsA _zhlMg9xYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziqxodxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_ziqxoNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zirYsNxYEeyZO8IXFiGgsA" name="" memberEnd="_zirYsdxYEeyZO8IXFiGgsA _zhlzktxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zirYsdxYEeyZO8IXFiGgsA" name="" type="_zMo3QNxYEeyZO8IXFiGgsA" association="_zirYsNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zir_wNxYEeyZO8IXFiGgsA" name="" memberEnd="_zir_wdxYEeyZO8IXFiGgsA _zhnowNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zir_wdxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zir_wNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zism0NxYEeyZO8IXFiGgsA" name="" memberEnd="_zism0dxYEeyZO8IXFiGgsA _zhoP0dxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zism0dxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zism0NxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zitN4NxYEeyZO8IXFiGgsA" name="" memberEnd="_zitN4dxYEeyZO8IXFiGgsA _zho24dxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zitN4dxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zitN4NxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zit08dxYEeyZO8IXFiGgsA" name="" memberEnd="_zit08txYEeyZO8IXFiGgsA _zhpd8dxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zit08txYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zit08dxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziucAdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziucAtxYEeyZO8IXFiGgsA _zhqsENxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziucAtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziucAdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zivDEdxYEeyZO8IXFiGgsA" name="" memberEnd="_zivDEtxYEeyZO8IXFiGgsA _zhrTIdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zivDEtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zivDEdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zivqIdxYEeyZO8IXFiGgsA" name="" memberEnd="_zivqItxYEeyZO8IXFiGgsA _zhr6MdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zivqItxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zivqIdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziwRMdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziwRMtxYEeyZO8IXFiGgsA _zhshQtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziwRMtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziwRMdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziw4QdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziw4QtxYEeyZO8IXFiGgsA _zhtIUtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziw4QtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziw4QdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziyGYNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziyGYdxYEeyZO8IXFiGgsA _zhtvYtxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziyGYdxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziyGYNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zizUgdxYEeyZO8IXFiGgsA" name="" memberEnd="_zizUgtxYEeyZO8IXFiGgsA _zhuWctxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zizUgtxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zizUgdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziz7kdxYEeyZO8IXFiGgsA" name="" memberEnd="_ziz7ktxYEeyZO8IXFiGgsA _zhu9gdxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziz7ktxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_ziz7kdxYEeyZO8IXFiGgsA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_zi0iodxYEeyZO8IXFiGgsA" name="" memberEnd="_zi0iotxYEeyZO8IXFiGgsA _zhu9hNxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_zi0iotxYEeyZO8IXFiGgsA" name="" type="_zNDuANxYEeyZO8IXFiGgsA" association="_zi0iodxYEeyZO8IXFiGgsA"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIpvINxYEeyZO8IXFiGgsA" name="app">
        <packagedElement xmi:type="uml:Class" xmi:id="_zLscENxYEeyZO8IXFiGgsA" name="App">
          <ownedComment xmi:id="_zhiwQNxYEeyZO8IXFiGgsA">
            <body>Classe &quot;main&quot; della postazione.&#xD;
Inizializza il model postazione, fa partire il controller e la view.</body>
          </ownedComment>
          <generalization xmi:id="_zebK0dxYEeyZO8IXFiGgsA" general="_zcPZgNxYEeyZO8IXFiGgsA"/>
          <ownedAttribute xmi:id="_zfXmANxYEeyZO8IXFiGgsA" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_zcBXEdxYEeyZO8IXFiGgsA" isReadOnly="true" association="_ziCfgNxYEeyZO8IXFiGgsA">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_zfYNENxYEeyZO8IXFiGgsA" value="LogManager.getLogger(App.class)"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg2MsNxYEeyZO8IXFiGgsA" name="main" specification="_zLzJwNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg2zwNxYEeyZO8IXFiGgsA" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zg2zwdxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>Application.launch(args);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_zg6eINxYEeyZO8IXFiGgsA" name="start" specification="_zeW5YNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zg6eIdxYEeyZO8IXFiGgsA" name="stage" type="_zcHdsNxYEeyZO8IXFiGgsA"/>
            <language>java</language>
            <body>stageTitle = FileUtils.getResourceBundle(&quot;etiqueta_puesto&quot;);&#xD;
		logger.info(&quot;Starting {} ========================== &quot;, stageTitle);&#xD;
		super.start(stage);&#xD;
&#xD;
		//Creo la classe model&#xD;
		int numConnections = 5;&#xD;
		Post post =  new Post(InetAddress.getByName(Constants.urnIp), Constants.portUrn, Constants.portStation, numConnections);&#xD;
&#xD;
		//Creo la classe view&#xD;
		View view = new View(stage, post);&#xD;
&#xD;
		try{&#xD;
			//Passo la view e il model al controller.&#xD;
			Controller controller = new Controller(view, post);&#xD;
			this.controller = controller;&#xD;
&#xD;
			//Passo il controller alla view&#xD;
			view.setControllerAndShowStage(controller);&#xD;
&#xD;
			//Il controller viene avviato.&#xD;
			controller.start();&#xD;
&#xD;
			//Aggiorno la view&#xD;
			view.update();&#xD;
		}&#xD;
		catch (PEException pee){&#xD;
			//controller.shutDown(); -> rompe tutto per qualche motivo&#xD;
			Dialogs.printException(pee);&#xD;
		}&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_zLzJwNxYEeyZO8IXFiGgsA" name="main" isStatic="true" method="_zg2MsNxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zLzJwdxYEeyZO8IXFiGgsA" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zL1mANxYEeyZO8IXFiGgsA" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_zeW5YNxYEeyZO8IXFiGgsA" name="start" method="_zg6eINxYEeyZO8IXFiGgsA" raisedException="_zeVrQdxYEeyZO8IXFiGgsA">
            <ownedParameter xmi:id="_zeW5YdxYEeyZO8IXFiGgsA" name="stage" type="_zcHdsNxYEeyZO8IXFiGgsA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_ziCfgNxYEeyZO8IXFiGgsA" name="" memberEnd="_ziCfgdxYEeyZO8IXFiGgsA _zfXmANxYEeyZO8IXFiGgsA">
          <ownedEnd xmi:id="_ziCfgdxYEeyZO8IXFiGgsA" name="" type="_zLscENxYEeyZO8IXFiGgsA" association="_ziCfgNxYEeyZO8IXFiGgsA"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIYpYNxYEeyZO8IXFiGgsA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_zIZQcNxYEeyZO8IXFiGgsA" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_zb9FoNxYEeyZO8IXFiGgsA" name="InetAddress"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_zdQGINxYEeyZO8IXFiGgsA" name="URL"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zJk8MNxYEeyZO8IXFiGgsA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_zdCqwNxYEeyZO8IXFiGgsA" name="FileInputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zJ0z0NxYEeyZO8IXFiGgsA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_zdfWsNxYEeyZO8IXFiGgsA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_zdpuwNxYEeyZO8IXFiGgsA" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_zd3xMNxYEeyZO8IXFiGgsA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_zd4YQdxYEeyZO8IXFiGgsA" name="Random"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zeVrQNxYEeyZO8IXFiGgsA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_zeVrQdxYEeyZO8IXFiGgsA" name="Exception"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_zeifkNxYEeyZO8IXFiGgsA" name="Runnable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIZ3gNxYEeyZO8IXFiGgsA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_zIaekNxYEeyZO8IXFiGgsA" name="apache">
        <packagedElement xmi:type="uml:Package" xmi:id="_zIaekdxYEeyZO8IXFiGgsA" name="logging">
          <packagedElement xmi:type="uml:Package" xmi:id="_zIaektxYEeyZO8IXFiGgsA" name="log4j">
            <packagedElement xmi:type="uml:Class" xmi:id="_zb_h4NxYEeyZO8IXFiGgsA" name="LogManager"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_zcBXEdxYEeyZO8IXFiGgsA" name="Logger"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIbFoNxYEeyZO8IXFiGgsA" name="exceptions">
      <packagedElement xmi:type="uml:Class" xmi:id="_zcDMQdxYEeyZO8IXFiGgsA" name="PEException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdqV0dxYEeyZO8IXFiGgsA" name="DBException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd6NcdxYEeyZO8IXFiGgsA" name="CNNException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd7bkNxYEeyZO8IXFiGgsA" name="DEVException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd8psNxYEeyZO8IXFiGgsA" name="ENCException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd9QwdxYEeyZO8IXFiGgsA" name="FLRException"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIbssNxYEeyZO8IXFiGgsA" name="javafx">
      <packagedElement xmi:type="uml:Package" xmi:id="_zIbssdxYEeyZO8IXFiGgsA" name="application">
        <packagedElement xmi:type="uml:Class" xmi:id="_zcFBcdxYEeyZO8IXFiGgsA" name="Application"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIcTwNxYEeyZO8IXFiGgsA" name="stage">
        <packagedElement xmi:type="uml:Class" xmi:id="_zcHdsNxYEeyZO8IXFiGgsA" name="Stage"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zItZgNxYEeyZO8IXFiGgsA" name="beans">
        <packagedElement xmi:type="uml:Package" xmi:id="_zIuAkNxYEeyZO8IXFiGgsA" name="property">
          <packagedElement xmi:type="uml:Class" xmi:id="_zcTD4NxYEeyZO8IXFiGgsA" name="SimpleObjectProperty"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc_ncNxYEeyZO8IXFiGgsA" name="SimpleStringProperty"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_zIunoNxYEeyZO8IXFiGgsA" name="value">
          <packagedElement xmi:type="uml:Interface" xmi:id="_zcU5EdxYEeyZO8IXFiGgsA" name="ObservableValue"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_zdUXkNxYEeyZO8IXFiGgsA" name="InvalidationListener"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_zdWMwNxYEeyZO8IXFiGgsA" name="Observable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIvOsNxYEeyZO8IXFiGgsA" name="scene">
        <packagedElement xmi:type="uml:Package" xmi:id="_zIvOsdxYEeyZO8IXFiGgsA" name="control">
          <packagedElement xmi:type="uml:Package" xmi:id="_zJzlsNxYEeyZO8IXFiGgsA" name="cell">
            <packagedElement xmi:type="uml:Class" xmi:id="_zdaeMNxYEeyZO8IXFiGgsA" name="PropertyValueFactory"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_zcWuQNxYEeyZO8IXFiGgsA" name="CheckBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zcX8YdxYEeyZO8IXFiGgsA" name="TableColumn"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc45wdxYEeyZO8IXFiGgsA" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc6H4dxYEeyZO8IXFiGgsA" name="Label"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc7WANxYEeyZO8IXFiGgsA" name="TextField"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc7WAtxYEeyZO8IXFiGgsA" name="TextFormatter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zdFHANxYEeyZO8IXFiGgsA" name="SplitPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ze0zcNxYEeyZO8IXFiGgsA" name="TableView"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_zJZWANxYEeyZO8IXFiGgsA" name="input">
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_zc8kIdxYEeyZO8IXFiGgsA" name="KeyCode"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zc9LMdxYEeyZO8IXFiGgsA" name="KeyEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_zJmKUNxYEeyZO8IXFiGgsA" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_zdGVINxYEeyZO8IXFiGgsA" name="Image"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zdG8MdxYEeyZO8IXFiGgsA" name="ImageView"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_zJmxYNxYEeyZO8IXFiGgsA" name="layout">
          <packagedElement xmi:type="uml:Class" xmi:id="_zdIKUNxYEeyZO8IXFiGgsA" name="BorderPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zdJYcNxYEeyZO8IXFiGgsA" name="HBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_zdbFQdxYEeyZO8IXFiGgsA" name="VBox"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zIv1wNxYEeyZO8IXFiGgsA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_zcZKgdxYEeyZO8IXFiGgsA" name="Callback"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zJYH4NxYEeyZO8IXFiGgsA" name="fxml">
        <packagedElement xmi:type="uml:Interface" xmi:id="_zc3EkNxYEeyZO8IXFiGgsA" name="FXML"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zJYu8NxYEeyZO8IXFiGgsA" name="event">
        <packagedElement xmi:type="uml:Class" xmi:id="_zc4SsNxYEeyZO8IXFiGgsA" name="ActionEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_zJxwgNxYEeyZO8IXFiGgsA" name="collections">
        <packagedElement xmi:type="uml:Class" xmi:id="_zdWz0dxYEeyZO8IXFiGgsA" name="FXCollections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_zdYpAdxYEeyZO8IXFiGgsA" name="ObservableList"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIfXENxYEeyZO8IXFiGgsA" name="utils">
      <packagedElement xmi:type="uml:Class" xmi:id="_zcJS4NxYEeyZO8IXFiGgsA" name="Constants"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcLvINxYEeyZO8IXFiGgsA" name="FileUtils"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zctTkNxYEeyZO8IXFiGgsA" name="Protocol"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zeBiMdxYEeyZO8IXFiGgsA" name="CfgManager"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zIf-INxYEeyZO8IXFiGgsA" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_zcM9QdxYEeyZO8IXFiGgsA" name="Dialogs"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcPZgNxYEeyZO8IXFiGgsA" name="JavaFXApp"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcbmwNxYEeyZO8IXFiGgsA" name="ViewAbstrController"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdRUQNxYEeyZO8IXFiGgsA" name="ViewManager"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_zeCwUNxYEeyZO8IXFiGgsA" name="ViewInterface"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zI4YoNxYEeyZO8IXFiGgsA" name="TableColumn">
      <packagedElement xmi:type="uml:Class" xmi:id="_zceDAdxYEeyZO8IXFiGgsA" name="CellDataFeatures"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zI-fQNxYEeyZO8IXFiGgsA" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_zclXwNxYEeyZO8IXFiGgsA" name="Link"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_zcml4NxYEeyZO8IXFiGgsA" name="ServiceFactory"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcnM8dxYEeyZO8IXFiGgsA" name="TerminalController"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcqQQNxYEeyZO8IXFiGgsA" name="AbstrService"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdD44NxYEeyZO8IXFiGgsA" name="CardReader"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd930dxYEeyZO8IXFiGgsA" name="AbstrServer"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd-e4dxYEeyZO8IXFiGgsA" name="UrnPolling"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd_F8dxYEeyZO8IXFiGgsA" name="Server"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zJEl4NxYEeyZO8IXFiGgsA" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_zJFM8NxYEeyZO8IXFiGgsA" name="State">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_zcsFcdxYEeyZO8IXFiGgsA" name="StatePost"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zcreYNxYEeyZO8IXFiGgsA" name="Message"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdcTYNxYEeyZO8IXFiGgsA" name="ElectoralList"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdc6cNxYEeyZO8IXFiGgsA" name="EmptyBallot"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zddhgNxYEeyZO8IXFiGgsA" name="Person"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdeIkNxYEeyZO8IXFiGgsA" name="WrittenBallot"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zdq84dxYEeyZO8IXFiGgsA" name="AbstrModel"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd_tAdxYEeyZO8IXFiGgsA" name="State"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zeAUEdxYEeyZO8IXFiGgsA" name="Terminals"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_zKaCoNxYEeyZO8IXFiGgsA" name="encryption">
      <packagedElement xmi:type="uml:Class" xmi:id="_zd5mYNxYEeyZO8IXFiGgsA" name="AES"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_zd5mYtxYEeyZO8IXFiGgsA" name="NonceManager"/>
    </packagedElement>
    <profileApplication xmi:id="_yalIMNxYEeyZO8IXFiGgsA">
      <eAnnotations xmi:id="_yapZoNxYEeyZO8IXFiGgsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_yauSINxYEeyZO8IXFiGgsA" base_Package="_vbXlENxYEeyZO8IXFiGgsA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zMK9MNxYEeyZO8IXFiGgsA" base_Element="_zMKWINxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zMMLUNxYEeyZO8IXFiGgsA" base_Element="_zMKWINxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zMMyYNxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zMdRENxYEeyZO8IXFiGgsA" base_Element="_zMcqANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zMd4INxYEeyZO8IXFiGgsA" base_Element="_zMcqANxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zMd4IdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zM-1gNxYEeyZO8IXFiGgsA" base_Element="_zM-OcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zM_ckNxYEeyZO8IXFiGgsA" base_Element="_zM-OcNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zM_ckdxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNImgNxYEeyZO8IXFiGgsA" base_Element="_zNH_cNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNJNkNxYEeyZO8IXFiGgsA" base_Element="_zNH_cNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNJNkdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNJ0oNxYEeyZO8IXFiGgsA" base_Element="_zNJNktxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNJ0odxYEeyZO8IXFiGgsA" base_Element="_zNJNktxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNJ0otxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNLCwNxYEeyZO8IXFiGgsA" base_Element="_zNJ0o9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNLCwdxYEeyZO8IXFiGgsA" base_Element="_zNJ0o9xYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNLp0NxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNMQ4NxYEeyZO8IXFiGgsA" base_Element="_zNLp0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNMQ4dxYEeyZO8IXFiGgsA" base_Element="_zNLp0dxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNMQ4txYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNM38dxYEeyZO8IXFiGgsA" base_Element="_zNM38NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNNfANxYEeyZO8IXFiGgsA" base_Element="_zNM38NxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNNfAdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNOGENxYEeyZO8IXFiGgsA" base_Element="_zNNfAtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNOtINxYEeyZO8IXFiGgsA" base_Element="_zNNfAtxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNOtIdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zNPUMNxYEeyZO8IXFiGgsA" base_Element="_zNOtItxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zNP7QNxYEeyZO8IXFiGgsA" base_Element="_zNOtItxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zNP7QdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_zNhoEdxYEeyZO8IXFiGgsA" dimensions="1" base_Element="_zNhBAtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zNl5gdxYEeyZO8IXFiGgsA" base_Element="_zNlScNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zNnHotxYEeyZO8IXFiGgsA" base_Element="_zNmgkdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zNo80NxYEeyZO8IXFiGgsA" base_Element="_zNoVwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zNqyANxYEeyZO8IXFiGgsA" base_Element="_zNqK8NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zOJTINxYEeyZO8IXFiGgsA" dimensions="1" base_Element="_zOIFAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zOPZwNxYEeyZO8IXFiGgsA" base_Element="_zOOLoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zOQA0NxYEeyZO8IXFiGgsA" base_Element="_zOOLoNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zOQA0dxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zORO8NxYEeyZO8IXFiGgsA" base_Element="_zOQn4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zORO8dxYEeyZO8IXFiGgsA" base_Element="_zOQn4NxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zORO8txYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zOTEINxYEeyZO8IXFiGgsA" base_Element="_zOR2ANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zOTEIdxYEeyZO8IXFiGgsA" base_Element="_zOR2ANxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zOTEItxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zOUSQNxYEeyZO8IXFiGgsA" base_Element="_zOTrMNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zOUSQdxYEeyZO8IXFiGgsA" base_Element="_zOTrMNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zOUSQtxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zOVgYNxYEeyZO8IXFiGgsA" base_Element="_zOU5UNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zOWHcNxYEeyZO8IXFiGgsA" base_Element="_zOU5UNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zOWHcdxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_zb-60NxYEeyZO8IXFiGgsA" base_Element="_zb9FoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcBXENxYEeyZO8IXFiGgsA" base_Element="_zb_h4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcDMQNxYEeyZO8IXFiGgsA" base_Element="_zcBXEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcFBcNxYEeyZO8IXFiGgsA" base_Element="_zcDMQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcG2oNxYEeyZO8IXFiGgsA" base_Element="_zcFBcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcIr0NxYEeyZO8IXFiGgsA" base_Element="_zcHdsNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcLIENxYEeyZO8IXFiGgsA" base_Element="_zcJS4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcM9QNxYEeyZO8IXFiGgsA" base_Element="_zcLvINxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcOycNxYEeyZO8IXFiGgsA" base_Element="_zcM9QdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcQnoNxYEeyZO8IXFiGgsA" base_Element="_zcPZgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcU5ENxYEeyZO8IXFiGgsA" base_Element="_zcTD4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcWHMNxYEeyZO8IXFiGgsA" base_Element="_zcU5EdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcX8YNxYEeyZO8IXFiGgsA" base_Element="_zcWuQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcZKgNxYEeyZO8IXFiGgsA" base_Element="_zcX8YdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zca_sNxYEeyZO8IXFiGgsA" base_Element="_zcZKgdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcc04NxYEeyZO8IXFiGgsA" base_Element="_zcbmwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcf4MNxYEeyZO8IXFiGgsA" base_Element="_zceDAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zchtYNxYEeyZO8IXFiGgsA" genericsValue="CheckBox" base_Element="_zcgfQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zciUcNxYEeyZO8IXFiGgsA" base_Element="_zcgfQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zci7gNxYEeyZO8IXFiGgsA" genericsValue="OptionViewModel, CheckBox" base_Element="_zcgfQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zcjikNxYEeyZO8IXFiGgsA" base_Element="_zcgfQNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zcjikdxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_zcl-0NxYEeyZO8IXFiGgsA" base_Element="_zclXwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcnM8NxYEeyZO8IXFiGgsA" base_Element="_zcml4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcobENxYEeyZO8IXFiGgsA" base_Element="_zcnM8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcq3UNxYEeyZO8IXFiGgsA" base_Element="_zcqQQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcsFcNxYEeyZO8IXFiGgsA" base_Element="_zcreYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zcssgNxYEeyZO8IXFiGgsA" base_Element="_zcsFcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zctTkdxYEeyZO8IXFiGgsA" base_Element="_zctTkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zczaMNxYEeyZO8IXFiGgsA" genericsValue="CheckBox" base_Element="_zcyMENxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zc0BQNxYEeyZO8IXFiGgsA" base_Element="_zcyMENxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zc0oUNxYEeyZO8IXFiGgsA" genericsValue="CandidateViewModel, CheckBox" base_Element="_zcyMEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zc1PYNxYEeyZO8IXFiGgsA" base_Element="_zcyMENxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zc1PYdxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_zc3roNxYEeyZO8IXFiGgsA" base_Element="_zc3EkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc45wNxYEeyZO8IXFiGgsA" base_Element="_zc4SsNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc6H4NxYEeyZO8IXFiGgsA" base_Element="_zc45wdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc6u8NxYEeyZO8IXFiGgsA" base_Element="_zc6H4dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc7WAdxYEeyZO8IXFiGgsA" base_Element="_zc7WANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc8kINxYEeyZO8IXFiGgsA" base_Element="_zc7WAtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc9LMNxYEeyZO8IXFiGgsA" base_Element="_zc8kIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zc9yQNxYEeyZO8IXFiGgsA" base_Element="_zc9LMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdA1kNxYEeyZO8IXFiGgsA" base_Element="_zc_ncNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdDR0NxYEeyZO8IXFiGgsA" base_Element="_zdCqwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdEf8NxYEeyZO8IXFiGgsA" base_Element="_zdD44NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdFuENxYEeyZO8IXFiGgsA" base_Element="_zdFHANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdG8MNxYEeyZO8IXFiGgsA" base_Element="_zdGVINxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdHjQNxYEeyZO8IXFiGgsA" base_Element="_zdG8MdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdIxYNxYEeyZO8IXFiGgsA" base_Element="_zdIKUNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdJ_gNxYEeyZO8IXFiGgsA" base_Element="_zdJYcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdQtMNxYEeyZO8IXFiGgsA" base_Element="_zdQGINxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdR7UNxYEeyZO8IXFiGgsA" base_Element="_zdRUQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdVlsNxYEeyZO8IXFiGgsA" base_Element="_zdUXkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdWz0NxYEeyZO8IXFiGgsA" base_Element="_zdWMwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdYpANxYEeyZO8IXFiGgsA" base_Element="_zdWz0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdZ3INxYEeyZO8IXFiGgsA" base_Element="_zdYpAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdbFQNxYEeyZO8IXFiGgsA" base_Element="_zdaeMNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdbsUNxYEeyZO8IXFiGgsA" base_Element="_zdbFQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdcTYdxYEeyZO8IXFiGgsA" base_Element="_zdcTYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdc6cdxYEeyZO8IXFiGgsA" base_Element="_zdc6cNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zddhgdxYEeyZO8IXFiGgsA" base_Element="_zddhgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdevoNxYEeyZO8IXFiGgsA" base_Element="_zdeIkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdf9wNxYEeyZO8IXFiGgsA" base_Element="_zdfWsNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdqV0NxYEeyZO8IXFiGgsA" base_Element="_zdpuwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdq84NxYEeyZO8IXFiGgsA" base_Element="_zdqV0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zdrj8NxYEeyZO8IXFiGgsA" base_Element="_zdq84dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd4YQNxYEeyZO8IXFiGgsA" base_Element="_zd3xMNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd4_UNxYEeyZO8IXFiGgsA" base_Element="_zd4YQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd5mYdxYEeyZO8IXFiGgsA" base_Element="_zd5mYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd6NcNxYEeyZO8IXFiGgsA" base_Element="_zd5mYtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd60gNxYEeyZO8IXFiGgsA" base_Element="_zd6NcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd8CoNxYEeyZO8IXFiGgsA" base_Element="_zd7bkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd9QwNxYEeyZO8IXFiGgsA" base_Element="_zd8psNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd930NxYEeyZO8IXFiGgsA" base_Element="_zd9QwdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd-e4NxYEeyZO8IXFiGgsA" base_Element="_zd930dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd_F8NxYEeyZO8IXFiGgsA" base_Element="_zd-e4dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zd_tANxYEeyZO8IXFiGgsA" base_Element="_zd_F8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zeAUENxYEeyZO8IXFiGgsA" base_Element="_zd_tAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zeBiMNxYEeyZO8IXFiGgsA" base_Element="_zeAUEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zeCJQNxYEeyZO8IXFiGgsA" base_Element="_zeBiMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zeDXYNxYEeyZO8IXFiGgsA" base_Element="_zeCwUNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zeWSUNxYEeyZO8IXFiGgsA" base_Element="_zeVrQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zeXgcNxYEeyZO8IXFiGgsA" base_Element="_zeW5YNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zeajwNxYEeyZO8IXFiGgsA" base_Element="_zeW5YNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zebK0NxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zegqYNxYEeyZO8IXFiGgsA" genericsValue="TableColumn.CellDataFeatures&lt;OptionViewModel, CheckBox>, ObservableValue&lt;CheckBox>" base_Element="_zefcQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zejGoNxYEeyZO8IXFiGgsA" base_Element="_zeifkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zekUwdxYEeyZO8IXFiGgsA" base_Element="_zejtsNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zek70NxYEeyZO8IXFiGgsA" base_Element="_zejtsNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zek70dxYEeyZO8IXFiGgsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zenYENxYEeyZO8IXFiGgsA" genericsValue="TableColumn.CellDataFeatures&lt;CandidateViewModel, CheckBox>, ObservableValue&lt;CheckBox>" base_Element="_zemxANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zeqbYNxYEeyZO8IXFiGgsA" base_Element="_zepNQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zeqbYdxYEeyZO8IXFiGgsA" base_Element="_zepNQNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zeqbYtxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zerpgNxYEeyZO8IXFiGgsA" base_Element="_zerCcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zerpgdxYEeyZO8IXFiGgsA" base_Element="_zerCcNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zesQkNxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zevT4NxYEeyZO8IXFiGgsA" base_Element="_zeus0NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zevT4dxYEeyZO8IXFiGgsA" base_Element="_zeus0NxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zev68NxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zewiANxYEeyZO8IXFiGgsA" base_Element="_zev68dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zexJENxYEeyZO8IXFiGgsA" base_Element="_zev68dxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zexJEdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ze2BkNxYEeyZO8IXFiGgsA" base_Element="_ze0zcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ze5E4txYEeyZO8IXFiGgsA" typeParameterDeclarationValue="ViewModel" base_Operation="_ze32wNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ze5r8NxYEeyZO8IXFiGgsA" base_Element="_ze32wNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_ze6TANxYEeyZO8IXFiGgsA" genericsValue="ViewModel" base_Element="_ze4d0NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zfC14dxYEeyZO8IXFiGgsA" dimensions="1" base_Element="_zfCO0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfZbMNxYEeyZO8IXFiGgsA" base_Element="_zfY0INxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfaCQNxYEeyZO8IXFiGgsA" base_Element="_zfZbMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfbQYNxYEeyZO8IXFiGgsA" base_Element="_zfapUdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfb3cNxYEeyZO8IXFiGgsA" base_Element="_zfbQYdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfb3cdxYEeyZO8IXFiGgsA" base_Element="_zfbQYdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfb3ctxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfdFkNxYEeyZO8IXFiGgsA" base_Element="_zfcegNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfdFkdxYEeyZO8IXFiGgsA" base_Element="_zfcegNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfdFktxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfdsodxYEeyZO8IXFiGgsA" base_Element="_zfdsoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfeTsNxYEeyZO8IXFiGgsA" base_Element="_zfdsoNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfeTsdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zffh0NxYEeyZO8IXFiGgsA" base_Element="_zfe6wNxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zfgI4NxYEeyZO8IXFiGgsA" name="getBallot" method="_zhBL0NxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zfgI4dxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfgv8dxYEeyZO8IXFiGgsA" base_Element="_zfgv8NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfhXAdxYEeyZO8IXFiGgsA" base_Element="_zfhXANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfilINxYEeyZO8IXFiGgsA" base_Element="_zfh-ENxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfilIdxYEeyZO8IXFiGgsA" base_Element="_zfh-ENxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfjMMNxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_zfjMMtxYEeyZO8IXFiGgsA" base_Property="_zfjMMdxYEeyZO8IXFiGgsA" siblings="_zhj-YNxYEeyZO8IXFiGgsA _zhklcNxYEeyZO8IXFiGgsA _zhlMgNxYEeyZO8IXFiGgsA _zhlMg9xYEeyZO8IXFiGgsA _zhlzktxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfjzQNxYEeyZO8IXFiGgsA" base_Element="_zfjMMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zflBYNxYEeyZO8IXFiGgsA" base_Element="_zfjMMdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zflBYdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zflocdxYEeyZO8IXFiGgsA" base_Element="_zflocNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfmPgNxYEeyZO8IXFiGgsA" base_Element="_zflocNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfmPgdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfm2kNxYEeyZO8IXFiGgsA" base_Element="_zfmPgtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfndoNxYEeyZO8IXFiGgsA" base_Element="_zfmPgtxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfndodxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfoEsNxYEeyZO8IXFiGgsA" base_Element="_zfndotxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfoEsdxYEeyZO8IXFiGgsA" base_Element="_zfndotxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfoEstxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zforwdxYEeyZO8IXFiGgsA" base_Element="_zforwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zforwtxYEeyZO8IXFiGgsA" base_Element="_zforwNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfpS0NxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfpS0txYEeyZO8IXFiGgsA" base_Element="_zfpS0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfp54NxYEeyZO8IXFiGgsA" base_Element="_zfpS0dxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfp54dxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfrIANxYEeyZO8IXFiGgsA" base_Element="_zfqg8NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfrvEdxYEeyZO8IXFiGgsA" base_Element="_zfrIAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfsWINxYEeyZO8IXFiGgsA" base_Element="_zfrvEtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zfs9MNxYEeyZO8IXFiGgsA" genericsValue="CandidateViewModel" base_Element="_zfsWIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zftkQNxYEeyZO8IXFiGgsA" base_Element="_zfsWIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zftkQdxYEeyZO8IXFiGgsA" base_Element="_zfsWIdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zftkQtxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zfuLUdxYEeyZO8IXFiGgsA" genericsValue="OptionViewModel" base_Element="_zfuLUNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfuyYNxYEeyZO8IXFiGgsA" base_Element="_zfuLUNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfuyYdxYEeyZO8IXFiGgsA" base_Element="_zfuLUNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfvZcNxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfwAgNxYEeyZO8IXFiGgsA" base_Element="_zfvZcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfwAgdxYEeyZO8IXFiGgsA" base_Element="_zfvZcdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfwAgtxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zfxOoNxYEeyZO8IXFiGgsA" genericsValue="BallotRecapViewModel" base_Element="_zfwAg9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfx1sNxYEeyZO8IXFiGgsA" base_Element="_zfwAg9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfx1sdxYEeyZO8IXFiGgsA" base_Element="_zfwAg9xYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfycwNxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zfzD0NxYEeyZO8IXFiGgsA" genericsValue="VoteRecapViewModel" base_Element="_zfycwdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zfzq4NxYEeyZO8IXFiGgsA" base_Element="_zfycwdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zfzq4dxYEeyZO8IXFiGgsA" base_Element="_zfycwdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zfzq4txYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf0R8NxYEeyZO8IXFiGgsA" genericsValue="CandidateViewModel, String" base_Element="_zfzq49xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zf05ANxYEeyZO8IXFiGgsA" base_Property="_zfzq49xYEeyZO8IXFiGgsA" siblings="_zhnowNxYEeyZO8IXFiGgsA _zhoP0dxYEeyZO8IXFiGgsA _zho24dxYEeyZO8IXFiGgsA _zhpd8dxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf05AdxYEeyZO8IXFiGgsA" base_Element="_zfzq49xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf1gENxYEeyZO8IXFiGgsA" base_Element="_zfzq49xYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf1gEdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf2HINxYEeyZO8IXFiGgsA" genericsValue="CandidateViewModel, CheckBox" base_Element="_zf1gEtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf2uMNxYEeyZO8IXFiGgsA" base_Element="_zf1gEtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf2uMdxYEeyZO8IXFiGgsA" base_Element="_zf1gEtxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf2uMtxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf3VQdxYEeyZO8IXFiGgsA" genericsValue="OptionViewModel, String" base_Element="_zf3VQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf38UNxYEeyZO8IXFiGgsA" base_Element="_zf3VQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf38UdxYEeyZO8IXFiGgsA" base_Element="_zf3VQNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf38UtxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf4jYdxYEeyZO8IXFiGgsA" genericsValue="OptionViewModel, CheckBox" base_Element="_zf4jYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf5KcNxYEeyZO8IXFiGgsA" base_Element="_zf4jYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf5KcdxYEeyZO8IXFiGgsA" base_Element="_zf4jYNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf5KctxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf6YkNxYEeyZO8IXFiGgsA" genericsValue="VoteRecapViewModel, String" base_Element="_zf5xgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zf6YkdxYEeyZO8IXFiGgsA" base_Property="_zf5xgNxYEeyZO8IXFiGgsA" siblings="_zhqsENxYEeyZO8IXFiGgsA _zhrTIdxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf6_oNxYEeyZO8IXFiGgsA" base_Element="_zf5xgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf7msNxYEeyZO8IXFiGgsA" base_Element="_zf5xgNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf7msdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_zf800NxYEeyZO8IXFiGgsA" genericsValue="BallotRecapViewModel, String" base_Element="_zf8NwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zf9b4NxYEeyZO8IXFiGgsA" base_Property="_zf8NwNxYEeyZO8IXFiGgsA" siblings="_zhr6MdxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf9b4dxYEeyZO8IXFiGgsA" base_Element="_zf8NwNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf-C8NxYEeyZO8IXFiGgsA" base_Element="_zf8NwNxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf-C8dxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf-qAdxYEeyZO8IXFiGgsA" base_Element="_zf-qANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zf_RENxYEeyZO8IXFiGgsA" base_Element="_zf-qANxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zf_REdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_zf_4INxYEeyZO8IXFiGgsA" base_Property="_zf_REtxYEeyZO8IXFiGgsA" siblings="_zhshQtxYEeyZO8IXFiGgsA _zhtIUtxYEeyZO8IXFiGgsA _zhtvYtxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zf_4IdxYEeyZO8IXFiGgsA" base_Element="_zf_REtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zgAfMNxYEeyZO8IXFiGgsA" base_Element="_zf_REtxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zgBGQNxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_zgBtUNxYEeyZO8IXFiGgsA" base_Property="_zgBGQdxYEeyZO8IXFiGgsA" siblings="_zhuWctxYEeyZO8IXFiGgsA _zhu9gdxYEeyZO8IXFiGgsA _zhu9hNxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgCUYNxYEeyZO8IXFiGgsA" base_Element="_zgBGQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Annotations xmi:id="_zgC7cNxYEeyZO8IXFiGgsA" base_Element="_zgBGQdxYEeyZO8IXFiGgsA">
    <annotations xmi:id="_zgC7cdxYEeyZO8IXFiGgsA" name="FXML"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:MultiDeclaration xmi:id="_zgDigdxYEeyZO8IXFiGgsA" base_Property="_zgDigNxYEeyZO8IXFiGgsA" siblings="_zhvkktxYEeyZO8IXFiGgsA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgEJkNxYEeyZO8IXFiGgsA" base_Element="_zgDigNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zgEwotxYEeyZO8IXFiGgsA" base_Element="_zgEwoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgFXsNxYEeyZO8IXFiGgsA" base_Element="_zgEwoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zgGl0NxYEeyZO8IXFiGgsA" genericsValue="WrittenBallot" base_Element="_zgFXsdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgGl0dxYEeyZO8IXFiGgsA" base_Element="_zgFXsdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgK3QNxYEeyZO8IXFiGgsA" base_Element="_zgKQMNxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgLeUNxYEeyZO8IXFiGgsA" name="getStationIp" method="_zhMK8NxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgMscNxYEeyZO8IXFiGgsA" type="_zb9FoNxYEeyZO8IXFiGgsA" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgLeUdxYEeyZO8IXFiGgsA" name="setStationIp" method="_zhMK8txYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgLeUtxYEeyZO8IXFiGgsA" name="ipStation" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgNTgdxYEeyZO8IXFiGgsA" base_Element="_zgNTgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgOhoNxYEeyZO8IXFiGgsA" base_Element="_zgN6kNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zgPIsdxYEeyZO8IXFiGgsA" dimensions="1" base_Element="_zgOhodxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgPvwNxYEeyZO8IXFiGgsA" base_Element="_zgOhodxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgQ94NxYEeyZO8IXFiGgsA" base_Element="_zgQW0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgRk8dxYEeyZO8IXFiGgsA" base_Element="_zgQ94dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zgSzENxYEeyZO8IXFiGgsA" genericsValue="Integer, EmptyBallot" base_Element="_zgSMANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgTaINxYEeyZO8IXFiGgsA" base_Element="_zgSMANxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zgUBMdxYEeyZO8IXFiGgsA" dimensions="2" base_Element="_zgTaIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Array xmi:id="_zgVPUNxYEeyZO8IXFiGgsA" base_Element="_zgUoQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Generics xmi:id="_zgWdcNxYEeyZO8IXFiGgsA" genericsValue="WrittenBallot" base_Element="_zgV2YNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgYSoNxYEeyZO8IXFiGgsA" base_Element="_zgXrkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgau4NxYEeyZO8IXFiGgsA" base_Element="_zgaH0NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgbV8dxYEeyZO8IXFiGgsA" base_Element="_zgbV8NxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgb9ANxYEeyZO8IXFiGgsA" name="getElectoralList" method="_zhTfsNxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgckENxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgdLINxYEeyZO8IXFiGgsA" base_Element="_zgckEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgdyMdxYEeyZO8IXFiGgsA" base_Element="_zgdyMNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgeZQNxYEeyZO8IXFiGgsA" base_Element="_zgdyMtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgfAUNxYEeyZO8IXFiGgsA" base_Element="_zgeZQdxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgfAUdxYEeyZO8IXFiGgsA" name="getDateOfBirth" method="_zhTfstxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgfnYNxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zghckNxYEeyZO8IXFiGgsA" base_Element="_zgg1gNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgj40dxYEeyZO8IXFiGgsA" base_Element="_zgj40NxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgkf4NxYEeyZO8IXFiGgsA" name="getOption" method="_zhdQsNxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgkf4dxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgluAdxYEeyZO8IXFiGgsA" base_Element="_zgluANxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgmVENxYEeyZO8IXFiGgsA" name="getBallot" method="_zhd3wNxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgmVEdxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgm8IdxYEeyZO8IXFiGgsA" base_Element="_zgm8INxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgnjMNxYEeyZO8IXFiGgsA" name="getList" method="_zhd3wtxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgnjMdxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zgoKQdxYEeyZO8IXFiGgsA" base_Element="_zgoKQNxYEeyZO8IXFiGgsA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_zgoxUNxYEeyZO8IXFiGgsA" name="getPreference" method="_zhee0dxYEeyZO8IXFiGgsA">
      <ownedParameter xmi:id="_zgoxUdxYEeyZO8IXFiGgsA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <uml:OpaqueBehavior xmi:id="_zhBL0NxYEeyZO8IXFiGgsA" name="getBallot" specification="_zfgI4NxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhBL0dxYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ballot.getValue();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhMK8NxYEeyZO8IXFiGgsA" name="getStationIp" specification="_zgLeUNxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhMK8dxYEeyZO8IXFiGgsA" type="_zb9FoNxYEeyZO8IXFiGgsA" direction="return"/>
    <language>java</language>
    <body>if(Constants.devMode &amp;&amp; simulateOffline)&#xD;
			return null;&#xD;
		&#xD;
		return stationIp;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhMK8txYEeyZO8IXFiGgsA" name="setStationIp" specification="_zgLeUdxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhMyANxYEeyZO8IXFiGgsA" name="ipStation" type="_zb9FoNxYEeyZO8IXFiGgsA"/>
    <language>java</language>
    <body>this.stationIp = ipStation;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhTfsNxYEeyZO8IXFiGgsA" name="getElectoralList" specification="_zgb9ANxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhTfsdxYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return electoralList.get();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhTfstxYEeyZO8IXFiGgsA" name="getDateOfBirth" specification="_zgfAUdxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhTfs9xYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return dateOfBirth.get();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhdQsNxYEeyZO8IXFiGgsA" name="getOption" specification="_zgkf4NxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhdQsdxYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return option.getValue();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhd3wNxYEeyZO8IXFiGgsA" name="getBallot" specification="_zgmVENxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhd3wdxYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return ballot.getValue();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhd3wtxYEeyZO8IXFiGgsA" name="getList" specification="_zgnjMNxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhee0NxYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return list.getValue();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_zhee0dxYEeyZO8IXFiGgsA" name="getPreference" specification="_zgoxUNxYEeyZO8IXFiGgsA">
    <ownedParameter xmi:id="_zhee0txYEeyZO8IXFiGgsA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return preference.getValue();&#xD;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhj-YdxYEeyZO8IXFiGgsA" base_Property="_zhj-YNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhj-YtxYEeyZO8IXFiGgsA" base_Element="_zhj-YNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhklcdxYEeyZO8IXFiGgsA" base_Property="_zhklcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhklctxYEeyZO8IXFiGgsA" base_Element="_zhklcNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhlMgdxYEeyZO8IXFiGgsA" base_Property="_zhlMgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhlMgtxYEeyZO8IXFiGgsA" base_Element="_zhlMgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhlzkNxYEeyZO8IXFiGgsA" base_Property="_zhlMg9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhlzkdxYEeyZO8IXFiGgsA" base_Element="_zhlMg9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhmaoNxYEeyZO8IXFiGgsA" base_Property="_zhlzktxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhmaodxYEeyZO8IXFiGgsA" base_Element="_zhlzktxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhnowdxYEeyZO8IXFiGgsA" base_Property="_zhnowNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhoP0NxYEeyZO8IXFiGgsA" base_Element="_zhnowNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhoP0txYEeyZO8IXFiGgsA" base_Property="_zhoP0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zho24NxYEeyZO8IXFiGgsA" base_Element="_zhoP0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zho24txYEeyZO8IXFiGgsA" base_Property="_zho24dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhpd8NxYEeyZO8IXFiGgsA" base_Element="_zho24dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhqFANxYEeyZO8IXFiGgsA" base_Property="_zhpd8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhqFAdxYEeyZO8IXFiGgsA" base_Element="_zhpd8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhqsEdxYEeyZO8IXFiGgsA" base_Property="_zhqsENxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhrTINxYEeyZO8IXFiGgsA" base_Element="_zhqsENxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhrTItxYEeyZO8IXFiGgsA" base_Property="_zhrTIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhr6MNxYEeyZO8IXFiGgsA" base_Element="_zhrTIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhshQNxYEeyZO8IXFiGgsA" base_Property="_zhr6MdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhshQdxYEeyZO8IXFiGgsA" base_Element="_zhr6MdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhtIUNxYEeyZO8IXFiGgsA" base_Property="_zhshQtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhtIUdxYEeyZO8IXFiGgsA" base_Element="_zhshQtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhtvYNxYEeyZO8IXFiGgsA" base_Property="_zhtIUtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhtvYdxYEeyZO8IXFiGgsA" base_Element="_zhtIUtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhuWcNxYEeyZO8IXFiGgsA" base_Property="_zhtvYtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhuWcdxYEeyZO8IXFiGgsA" base_Element="_zhtvYtxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhuWc9xYEeyZO8IXFiGgsA" base_Property="_zhuWctxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhu9gNxYEeyZO8IXFiGgsA" base_Element="_zhuWctxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhu9gtxYEeyZO8IXFiGgsA" base_Property="_zhu9gdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhu9g9xYEeyZO8IXFiGgsA" base_Element="_zhu9gdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhvkkNxYEeyZO8IXFiGgsA" base_Property="_zhu9hNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhvkkdxYEeyZO8IXFiGgsA" base_Element="_zhu9hNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_zhwLoNxYEeyZO8IXFiGgsA" base_Property="_zhvkktxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_zhwLodxYEeyZO8IXFiGgsA" base_Element="_zhvkktxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziDGkNxYEeyZO8IXFiGgsA" base_Element="_ziCfgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziEUsNxYEeyZO8IXFiGgsA" base_Element="_ziDtoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziE7wNxYEeyZO8IXFiGgsA" base_Element="_ziEUsdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziGJ4NxYEeyZO8IXFiGgsA" base_Element="_ziFi0NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziGw8NxYEeyZO8IXFiGgsA" base_Element="_ziGJ4dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziHYANxYEeyZO8IXFiGgsA" base_Element="_ziGw8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziH_ENxYEeyZO8IXFiGgsA" base_Element="_ziHYAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziImINxYEeyZO8IXFiGgsA" base_Element="_ziH_EdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziJNMNxYEeyZO8IXFiGgsA" base_Element="_ziImIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziKbUNxYEeyZO8IXFiGgsA" base_Element="_ziJNMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziLCYNxYEeyZO8IXFiGgsA" base_Element="_ziKbUdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziLpcNxYEeyZO8IXFiGgsA" base_Element="_ziLCYdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziMQgNxYEeyZO8IXFiGgsA" base_Element="_ziLpcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziM3kNxYEeyZO8IXFiGgsA" base_Element="_ziMQgdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziNeoNxYEeyZO8IXFiGgsA" base_Element="_ziM3kdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziOFsNxYEeyZO8IXFiGgsA" base_Element="_ziNeodxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziOFs9xYEeyZO8IXFiGgsA" base_Element="_ziOFsdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziOswtxYEeyZO8IXFiGgsA" base_Element="_ziOswNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziPT0NxYEeyZO8IXFiGgsA" base_Element="_ziOsw9xYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziP64NxYEeyZO8IXFiGgsA" base_Element="_ziPT0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziQh8NxYEeyZO8IXFiGgsA" base_Element="_ziP64dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziRJANxYEeyZO8IXFiGgsA" base_Element="_ziQh8dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziRwENxYEeyZO8IXFiGgsA" base_Element="_ziRJAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziSXINxYEeyZO8IXFiGgsA" base_Element="_ziRwEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziTlQNxYEeyZO8IXFiGgsA" base_Element="_ziS-MNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziUzYNxYEeyZO8IXFiGgsA" base_Element="_ziTlQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziVacNxYEeyZO8IXFiGgsA" base_Element="_ziUzYdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziWBgNxYEeyZO8IXFiGgsA" base_Element="_ziVacdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziWokNxYEeyZO8IXFiGgsA" base_Element="_ziWBgdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziXPoNxYEeyZO8IXFiGgsA" base_Element="_ziWokdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziYdwNxYEeyZO8IXFiGgsA" base_Element="_ziXPodxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziZE0NxYEeyZO8IXFiGgsA" base_Element="_ziYdwdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziZr4NxYEeyZO8IXFiGgsA" base_Element="_ziZE0dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zia6ANxYEeyZO8IXFiGgsA" base_Element="_ziaS8NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zicIINxYEeyZO8IXFiGgsA" base_Element="_zia6AdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zicvMNxYEeyZO8IXFiGgsA" base_Element="_zicIIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zid9UNxYEeyZO8IXFiGgsA" base_Element="_zidWQNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zifLcNxYEeyZO8IXFiGgsA" base_Element="_zid9UdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zifygNxYEeyZO8IXFiGgsA" base_Element="_zifLcdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zihAoNxYEeyZO8IXFiGgsA" base_Element="_zifygdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zihnsNxYEeyZO8IXFiGgsA" base_Element="_zihAodxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zii10NxYEeyZO8IXFiGgsA" base_Element="_zihnsdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zijc4NxYEeyZO8IXFiGgsA" base_Element="_zii10dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zikrANxYEeyZO8IXFiGgsA" base_Element="_zijc4dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zilSENxYEeyZO8IXFiGgsA" base_Element="_zikrAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zil5INxYEeyZO8IXFiGgsA" base_Element="_zilSEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zinHQNxYEeyZO8IXFiGgsA" base_Element="_zimgMNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zinuUNxYEeyZO8IXFiGgsA" base_Element="_zinHQdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zioVYtxYEeyZO8IXFiGgsA" base_Element="_zioVYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zio8ctxYEeyZO8IXFiGgsA" base_Element="_zio8cNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zipjgtxYEeyZO8IXFiGgsA" base_Element="_zipjgNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziqKktxYEeyZO8IXFiGgsA" base_Element="_ziqKkNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziqxotxYEeyZO8IXFiGgsA" base_Element="_ziqxoNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zirYstxYEeyZO8IXFiGgsA" base_Element="_zirYsNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zir_wtxYEeyZO8IXFiGgsA" base_Element="_zir_wNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zism0txYEeyZO8IXFiGgsA" base_Element="_zism0NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zit08NxYEeyZO8IXFiGgsA" base_Element="_zitN4NxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziucANxYEeyZO8IXFiGgsA" base_Element="_zit08dxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zivDENxYEeyZO8IXFiGgsA" base_Element="_ziucAdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zivqINxYEeyZO8IXFiGgsA" base_Element="_zivDEdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziwRMNxYEeyZO8IXFiGgsA" base_Element="_zivqIdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziw4QNxYEeyZO8IXFiGgsA" base_Element="_ziwRMdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zixfUNxYEeyZO8IXFiGgsA" base_Element="_ziw4QdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zizUgNxYEeyZO8IXFiGgsA" base_Element="_ziyGYNxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_ziz7kNxYEeyZO8IXFiGgsA" base_Element="_zizUgdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zi0ioNxYEeyZO8IXFiGgsA" base_Element="_ziz7kdxYEeyZO8IXFiGgsA"/>
  <UMLLabProfile:Reference xmi:id="_zi1JsNxYEeyZO8IXFiGgsA" base_Element="_zi0iodxYEeyZO8IXFiGgsA"/>
</xmi:XMI>
